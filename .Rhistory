custom.note = "*** p < 0.001; ** p < 0.01; * p < 0.05")
interact_plot(marchar3, pred = ola, modx = edad, interval = TRUE)
sim_slopes(marchar3, pred=ola, modx=edad)
sim_slopes(marchar3, pred=ola, modx=edad, jnplot = TRUE)
?interact_plot
sim_slopes(marchar3, pred=ola, modx=edad, jnplot = TRUE)
load(file = here::here("input/data-proc/df_study1_long_t7.RData"))
df_study1 <- df_study1_long_t7 %>% dplyr::select(idencuesta,ola, segmento, estrato, ponderador_long_total,
part_rrss,
edad) %>% na.omit()
df_study1 <- df_study1[complete.cases(df_study1$segmento), ]
df_study1$part_rrss <- factor(df_study1$part_rrss,
labels = c("Nunca", "Casi nunca", "A veces", "Frecuentemente", "Muy
frecuentemente"))
elsoc_diseno <- svydesign(ids = ~segmento, #muestreo por conglomerado a nivel de manzanas (segmento)
strata = ~estrato, #muestreo estratificado a nivel ciudad (estato)
weights = ~ponderador_long_total, #ponderador longitudinal
nest = TRUE,
data = df_study1)
#Paso 1
datos.marchar <- data.frame((svytable(~part_rrss + ola + idencuesta, elsoc_diseno, round = F))) %>%
dplyr::filter(Freq>0)  %>% group_by(ola) %>%
mutate(porcentaje=Freq/sum(Freq)) %>% na.omit()
#Paso 2
etiquetas.marchar <- data.frame((svytable(~part_rrss + ola, elsoc_diseno, round = F))) %>%
group_by(ola) %>% mutate(porcentaje=Freq/sum(Freq)) %>% na.omit() %>%
mutate(idencuesta = 1)
datos.marchar$part_rrss <- factor(datos.marchar$part_rrss, levels = rev(levels(datos.marchar$part_rrss)))
etiquetas.marchar$part_rrss <- factor(etiquetas.marchar$part_rrss, levels = rev(levels(etiquetas.marchar$part_rrss)))
ggplot(datos.marchar, aes(x = ola, fill = part_rrss, stratum = part_rrss,
alluvium = idencuesta, y = porcentaje))+
ggalluvial::geom_flow(alpha = .66) +
ggalluvial::geom_stratum(linetype = 0) +
scale_y_continuous(labels = scales::percent) +
ylab(label = NULL) +
xlab(label = NULL) +
theme(#legend.position = 'top',
legend.title = element_blank(),
plot.caption = element_text(hjust = 1)) +
scale_fill_manual(values = colors) +
geom_shadowtext(data = etiquetas.marchar,
aes(label = ifelse(porcentaje > 0 , scales::percent(porcentaje, accuracy = .1),"")),
position = position_stack(vjust = .5),
show.legend = FALSE,
size = 4,
color = rep('white'),
bg.colour='grey30')+
scale_x_discrete(labels = c(2016, 2017, 2018, 2019, 2021, 2022, 2023))
colors<- c("#f1eef6ff","#bdc9e1ff","#b3b3b3ff","#74a9cfff","#0570b0ff")
load(file = here::here("input/data-proc/df_study1_long_t7.RData"))
df_study1 <- df_study1_long_t7 %>% dplyr::select(idencuesta,ola, segmento, estrato, ponderador_long_total,
part_rrss,
edad) %>% na.omit()
df_study1 <- df_study1[complete.cases(df_study1$segmento), ]
df_study1$part_rrss <- factor(df_study1$part_rrss,
labels = c("Nunca", "Casi nunca", "A veces", "Frecuentemente", "Muy
frecuentemente"))
elsoc_diseno <- svydesign(ids = ~segmento, #muestreo por conglomerado a nivel de manzanas (segmento)
strata = ~estrato, #muestreo estratificado a nivel ciudad (estato)
weights = ~ponderador_long_total, #ponderador longitudinal
nest = TRUE,
data = df_study1)
#Paso 1
datos.marchar <- data.frame((svytable(~part_rrss + ola + idencuesta, elsoc_diseno, round = F))) %>%
dplyr::filter(Freq>0)  %>% group_by(ola) %>%
mutate(porcentaje=Freq/sum(Freq)) %>% na.omit()
#Paso 2
etiquetas.marchar <- data.frame((svytable(~part_rrss + ola, elsoc_diseno, round = F))) %>%
group_by(ola) %>% mutate(porcentaje=Freq/sum(Freq)) %>% na.omit() %>%
mutate(idencuesta = 1)
datos.marchar$part_rrss <- factor(datos.marchar$part_rrss, levels = rev(levels(datos.marchar$part_rrss)))
etiquetas.marchar$part_rrss <- factor(etiquetas.marchar$part_rrss, levels = rev(levels(etiquetas.marchar$part_rrss)))
ggplot(datos.marchar, aes(x = ola, fill = part_rrss, stratum = part_rrss,
alluvium = idencuesta, y = porcentaje))+
ggalluvial::geom_flow(alpha = .66) +
ggalluvial::geom_stratum(linetype = 0) +
scale_y_continuous(labels = scales::percent) +
ylab(label = NULL) +
xlab(label = NULL) +
theme(#legend.position = 'top',
legend.title = element_blank(),
plot.caption = element_text(hjust = 1)) +
scale_fill_manual(values = colors) +
geom_shadowtext(data = etiquetas.marchar,
aes(label = ifelse(porcentaje > 0 , scales::percent(porcentaje, accuracy = .1),"")),
position = position_stack(vjust = .5),
show.legend = FALSE,
size = 4,
color = rep('white'),
bg.colour='grey30')+
scale_x_discrete(labels = c(2016, 2017, 2018, 2019, 2021, 2022, 2023))
knitr::opts_chunk$set(
echo = FALSE,
results = "asis",
message = FALSE,
warning = FALSE,
fig.height = 14,
fig.width = 14,
cache = FALSE
)
options(scipen=9999) # desactivar notacion cientifica
remove(list = ls()) #limpieza del entorno de trabajo
if (!require("pacman")) install.packages("pacman") # instalar pacman
# cargar librerias
pacman::p_load(dplyr,       # Manipulacion de datos
knitr,
kableExtra,
summarytools,
ggplot2,
sjPlot,
tidyverse,
ggalluvial,
survey,
shadowtext,
srvyr,
interactions
)
load(file = here::here("input/data-proc/df_study1_long_t7.RData"))
# Css
st_css()
st_options(lang = "en",
footnote = NA,
bootstrap.css = F,
custom.css = here::here("input/css/dfsummary.css"),
dfSummary.custom.1 = NA
)
# Df variables nivel 1
# df<- dfSummary(df_study1_long %>% select(in_simpat:edad),
#                plain.ascii = FALSE,
#                style = "grid",
#                tmp.img.dir = "/tmp",
#                graph.magnif = TRUE,
#                headings = F,  # encabezado
#                varnumbers = F, # num variable
#                labels.col = T, # etiquetas
#                na.col = F,    # missing
#                graph.col = T, # plot
#                valid.col = T, # n valido
#                col.widths = c(700,10,10,10,10)
#                )
# df$Variable <- NULL # delete variable column
# view(df,
#      file = here::here("output/tables/desc01.html")
#      ) # Ver tabla en un archivo HTML
# webshot::webshot(url =here::here("output/tables/desc01.html"),
#         file =here::here("output/tables/desc01.png")) # Remover archivo HTML
# # print(df, method = "render")
# Df variables nivel 1 _________________________________________________________
df_study1 <- df_study1_long_t7 %>% dplyr::select(idencuesta,ola, segmento, estrato, ponderador_long_total,
part_marchas,
part_rrss,
mov_soc,
part_electoral,
interes_pol,
autoritarismo1,
autoritarismo2,
autoritarismo3,
autoritarismo4,
autoritarismo5,
adop_homo,
aborto,
restriccion_migrantes,
perc_des,
rol_estado_educ,
edad)
df_study1$ola <- factor(df_study1$ola,
labels = c("2016","2017","2018","2019", "2021", "2022", "2023"))
df_study1$ola <-
sjlabelled::set_label(x = df_study1$ola,
label = "Ola")
# df_study1$sexo <- factor(df_study1$sexo,
#          labels = c("Hombre", "Mujer"))
# df_study1$sexo <-
# sjlabelled::set_label(x = df_study1$sexo,
#                       label = "Sexo")
df_study1$part_marchas <-
sjlabelled::set_label(x = df_study1$part_marchas,
label = "Frecuencia: asiste a marchar")
#df_study1$part_com <-
#sjlabelled::set_label(x = df_study1$part_com,
#                      label = "Frecuencia: reuniones publicas/comunitarias")
lab_study1 <- sjlabelled::get_label(df_study1)
df_study1 <- df_study1 %>% na.omit() %>% sjlabelled::set_label(lab_study1)
df<- dfSummary(x = dplyr::select(df_study1, ola, part_marchas:edad),
plain.ascii = FALSE,
style = "grid",
tmp.img.dir = "/tmp",
graph.magnif = TRUE,
headings = F,  # encabezado
varnumbers = F, # num variable
labels.col = T, # etiquetas
na.col = F,    # missing
graph.col = T, # plot
valid.col = F, # n valido
col.widths = c(700,10,10,10)
)
df$Variable <- NULL # delete variable column
summarytools::view(df,
file = here::here("output/tables/desc02.html")
) # Ver tabla en un archivo HTML
webshot::webshot(url =here::here("output/tables/desc02.html"),
file =here::here("output/tables/desc02.png")) # Remover archivo HTML
# print(df, method = "render")
colors<- c("#f1eef6ff","#bdc9e1ff","#b3b3b3ff","#74a9cfff","#0570b0ff")
load(file = here::here("input/data-proc/df_study1_long_t7.RData"))
df_study1 <- df_study1_long_t7 %>% dplyr::select(idencuesta,ola, segmento, estrato, ponderador_long_total,
part_marchas,
edad) %>% na.omit()
df_study1 <- df_study1[complete.cases(df_study1$segmento), ]
df_study1$part_marchas <- factor(df_study1$part_marchas,
labels = c("Nunca", "Casi nunca", "A veces", "Frecuentemente", "Muy
frecuentemente"))
elsoc_diseno <- svydesign(ids = ~segmento, #muestreo por conglomerado a nivel de manzanas (segmento)
strata = ~estrato, #muestreo estratificado a nivel ciudad (estato)
weights = ~ponderador_long_total, #ponderador longitudinal
nest = TRUE,
data = df_study1)
#Paso 1
datos.marchar <- data.frame((svytable(~part_marchas + ola + idencuesta, elsoc_diseno, round = F))) %>%
dplyr::filter(Freq>0)  %>% group_by(ola) %>%
mutate(porcentaje=Freq/sum(Freq)) %>% na.omit()
#Paso 2
etiquetas.marchar <- data.frame((svytable(~part_marchas + ola, elsoc_diseno, round = F))) %>%
group_by(ola) %>% mutate(porcentaje=Freq/sum(Freq)) %>% na.omit() %>%
mutate(idencuesta = 1)
datos.marchar$part_marchas <- factor(datos.marchar$part_marchas, levels = rev(levels(datos.marchar$part_marchas)))
etiquetas.marchar$part_marchas <- factor(etiquetas.marchar$part_marchas, levels = rev(levels(etiquetas.marchar$part_marchas)))
ggplot(datos.marchar, aes(x = ola, fill = part_marchas, stratum = part_marchas,
alluvium = idencuesta, y = porcentaje))+
ggalluvial::geom_flow(alpha = .66) +
ggalluvial::geom_stratum(linetype = 0) +
scale_y_continuous(labels = scales::percent) +
ylab(label = NULL) +
xlab(label = NULL) +
theme(#legend.position = 'top',
legend.title = element_blank(),
plot.caption = element_text(hjust = 1)) +
scale_fill_manual(values = colors) +
geom_shadowtext(data = etiquetas.marchar,
aes(label = ifelse(porcentaje > 0 , scales::percent(porcentaje, accuracy = .1),"")),
position = position_stack(vjust = .5),
show.legend = FALSE,
size = 4,
color = rep('white'),
bg.colour='grey30')+
scale_x_discrete(labels = c(2016, 2017, 2018, 2019, 2021, 2022, 2023))
#if (!require("pacman")) install.packages("pacman") # instalar pacman
# cargar librerias
pacman::p_load(dplyr,       # Manipulacion de datos
knitr,
kableExtra,
summarytools,
lme4,
texreg
)
load(file = here::here("input/data-proc/df_study1_long_t7.RData"))
# generate analytical sample
df_study1 <-
df_study1_long_t7 %>%
select(idencuesta,ola,part_marchas, edad, ponderador_long_total) %>%
na.omit() %>%
mutate(ola_num=as.numeric(ola),
ola=as.factor(ola)
)
# Hipotesis
h1 <- "ola"
h2 <- "ola+edad"
h3 <- "ola*edad"
marchar.null <- lmer(formula(paste0("part_marchas~","1 + (1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
marchar1 <- lmer(formula(paste0("part_marchas~",h1,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
marchar2 <- lmer(formula(paste0("part_marchas~",h2,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
marchar3 <- lmer(formula(paste0("part_marchas~",h3,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
performance::icc(marchar.null)
sim_slopes(marchar3, pred = edad, mod2=ola, jnplot = TRUE)
#if (!require("pacman")) install.packages("pacman") # instalar pacman
# cargar librerias
pacman::p_load(dplyr,       # Manipulacion de datos
knitr,
kableExtra,
summarytools,
lme4,
texreg
)
load(file = here::here("input/data-proc/df_study1_long_t7.RData"))
# generate analytical sample
df_study1 <-
df_study1_long_t7 %>%
select(idencuesta,ola,part_marchas, edad, ponderador_long_total) %>%
na.omit() %>%
mutate(ola_num=as.numeric(ola),
ola=as.factor(ola)
)
# Hipotesis
h1 <- "ola"
h2 <- "ola+edad"
h3 <- "ola*edad"
marchar.null <- lmer(formula(paste0("part_marchas~","1 + (1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
marchar1 <- lmer(formula(paste0("part_marchas~",h1,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
marchar2 <- lmer(formula(paste0("part_marchas~",h2,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
marchar3 <- lmer(formula(paste0("part_marchas~",h3,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
performance::icc(marchar.null)
sim_slopes(marchar3, pred = edad, mod2=ola, jnplot = TRUE)
sim_slopes(marchar3, pred = edad, modx = ola, interval = TRUE)
sim_slopes(marchar3, pred = edad, modx = ola, jnplot = TRUE)
sim_slopes(marchar3, pred = edad, mod2 = ola, jnplot = TRUE)
sim_slopes(marchar3, pred = edad, modx = ola, jnplot = TRUE)
sim_slopes(marchar3, pred = edad, modx = ola, jnplot = TRUE)
sim_slopes(marchar3, pred = ola, modx = edad, jnplot = TRUE)
?sim_slopes
h3 <- "ola_num*edad"
marchar3 <- lmer(formula(paste0("part_marchas~",h3,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
sim_slopes(marchar3, pred = ola, modx = edad, jnplot = TRUE)
sim_slopes(marchar3, pred = ola_num, modx = edad, jnplot = TRUE)
sim_slopes(marchar3, pred = edad, modx = ola_num, jnplot = TRUE)
h3 <- "ola*edad"
marchar3 <- lmer(formula(paste0("part_marchas~",h3,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
sim_slopes(marchar3, pred = edad, modx = ola_num, jnplot = TRUE)
#if (!require("pacman")) install.packages("pacman") # instalar pacman
# cargar librerias
pacman::p_load(dplyr,       # Manipulacion de datos
knitr,
kableExtra,
summarytools,
lme4,
texreg
)
load(file = here::here("input/data-proc/df_study1_long_t7.RData"))
# generate analytical sample
df_study1 <-
df_study1_long_t7 %>%
select(idencuesta,ola,part_marchas, edad, ponderador_long_total) %>%
na.omit() %>%
mutate(ola_num=as.numeric(ola),
ola=as.factor(ola)
)
# Hipotesis
h1 <- "ola"
h2 <- "ola+edad"
h3 <- "ola*edad"
marchar.null <- lmer(formula(paste0("part_marchas~","1 + (1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
marchar1 <- lmer(formula(paste0("part_marchas~",h1,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
marchar2 <- lmer(formula(paste0("part_marchas~",h2,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
marchar3 <- lmer(formula(paste0("part_marchas~",h3,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
performance::icc(marchar.null)
sim_slopes(marchar3, pred = edad, modx = ola, jnplot = TRUE)
interact_plot(model, pred = edad, modx = ola, plot.points = TRUE, interval = TRUE)
interact_plot(marchar3, pred = edad, modx = ola, plot.points = TRUE, interval = TRUE)
interact_plot(marchar3, pred = edad, modx = ola, interval = TRUE)
interact_plot(marchar3, pred = ola, modx = edad, interval = TRUE)
ggplot(df_study1, aes(x = part_marchas, y = ola, color = edad)) +
geom_point() +
geom_smooth(method = "loess", se = TRUE)
ggplot(df_study1, aes(x = part_marchas, y = ola, color = edad)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE)
# Gráfico
ggplot(pred, aes(x = part_marchas, y = ola, color = edad)) +
geom_line() +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = 0.2) +
labs(title = "Curvas predichas de interacción", x = "X", y = "Predicción") +
theme_minimal()
pred <- ggpredict(marchar3, terms = c("ola", "edad"))
pred <- ggeffects::ggpredict(marchar3, terms = c("ola", "edad"))
# Gráfico
ggplot(pred, aes(x = part_marchas, y = ola, color = edad)) +
geom_line() +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = 0.2) +
labs(title = "Curvas predichas de interacción", x = "X", y = "Predicción") +
theme_minimal()
predicciones <- ggpredict(modelo, terms = c("ola", "edad [20, 40, 60]"))  # Define puntos clave de edad
predicciones <- ggeffects::ggpredict(modelo, terms = c("ola", "edad [20, 40, 60]"))  # Define puntos clave de edad
predicciones <- ggeffects::ggpredict(marchar3, terms = c("ola", "edad [20, 40, 60]"))  # Define puntos clave de edad
ggplot(predicciones, aes(x = x, y = predicted, color = group)) +
geom_line(size = 1) +  # Curvas suavizadas
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = 0.2, linetype = "dashed") +  # Intervalos de confianza
labs(
title = "Interacción entre Ola y Edad en Part_Marchas",
x = "Ola",
y = "Probabilidad Predicha de Participar en Marchas",
color = "Edad"
) +
theme_minimal()
predicciones <- ggeffects::ggpredict(marchar3, terms = c("ola", "edad [20, 40, 60]"))  # Define puntos clave de edad
ggplot(predicciones, aes(x = x, y = predicted, color = group)) +
geom_line(size = 1) +  # Curvas suavizadas
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = 0.2, linetype = "dashed") +  # Intervalos de confianza
labs(
x = "Ola",
y = "Probabilidad Predicha de Participar en Marchas",
color = "Edad"
) +
theme_minimal()
predicciones <- ggeffects::ggpredict(marchar3, terms = c("ola", "edad"))  # Define puntos clave de edad
ggplot(predicciones, aes(x = x, y = predicted, color = group)) +
geom_line(size = 1) +  # Curvas suavizadas
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = 0.2, linetype = "dashed") +  # Intervalos de confianza
labs(
x = "Ola",
y = "Probabilidad Predicha de Participar en Marchas",
color = "Edad"
) +
theme_minimal()
predicciones <- ggeffects::ggpredict(marchar3, terms = c("edad", "ola"))  # Define puntos clave de edad
ggplot(predicciones, aes(x = x, y = predicted, color = group)) +
geom_line(size = 1) +  # Curvas suavizadas
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = 0.2, linetype = "dashed") +  # Intervalos de confianza
labs(
x = "Ola",
y = "Probabilidad Predicha de Participar en Marchas",
color = "Edad"
) +
theme_minimal()
predicciones <- ggeffects::ggpredict(marchar3, terms = c("ola", "edad"))  # Define puntos clave de edad
ggplot(predicciones, aes(x = x, y = predicted, color = group)) +
geom_line(size = 1) +  # Curvas suavizadas
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = 0.2, linetype = "dashed") +  # Intervalos de confianza
labs(
x = "Ola",
y = "Probabilidad Predicha de Participar en Marchas",
color = "Edad"
) +
theme_minimal()
install.packages("emmeans")
install.packages("emmeans")
install.packages("emmeans")
em <- emmeans(marchar3, ~ ola | edad)
library(emmeans)
em <- sjstats::emmeans(marchar3, ~ ola | edad)
ggeffects::ggpredict(marchar3, terms = c("ola", "edad")) %>%
ggplot(aes(x=x, y=predicted, shape = group, color = group)) +
geom_line(aes(group=group,linetype = group),position = position_dodge(.1)) +
geom_point(size = 2.5,position = position_dodge(.1))
ggeffects::ggpredict(marchar3, terms = c("ola", "edad")) %>%
ggplot(aes(x=x, y=predicted, shape = group, color = group)) +
geom_line(aes(group=group,linetype = group),position = position_dodge(.1)) +
geom_point(size = 2.5,position = position_dodge(.1))+
scale_x_continuous(name = "")
ggeffects::ggpredict(marchar3, terms = c("ola", "edad")) %>%
ggplot(aes(x=x, y=predicted, shape = group, color = group)) +
geom_line(aes(group=group,linetype = group),position = position_dodge(.1)) +
geom_point(size = 2.5,position = position_dodge(.1))+
scale_x_continuous(name = "")+
scale_y_continuous(limits = c(0,0.40), breaks=seq(0,0.40, by = 0.05),
labels = scales::percent_format(accuracy = 1L)) +
theme_bw() +
labs(title="", y = "") +
theme(plot.title = element_text(size = 11),
axis.text=element_text(size=11))
ggeffects::ggpredict(marchar3, terms = c("ola", "edad")) %>%
ggplot(aes(x=x, y=predicted, shape = group, color = group)) +
geom_line(aes(group=group,linetype = group),position = position_dodge(.1)) +
geom_point(size = 2.5,position = position_dodge(.1))+
scale_x_continuous(name = "")
ggeffects::ggpredict(marchar3, terms = c("ola", "edad")) %>%
ggplot(aes(x=x, y=predicted, shape = group, color = group)) +
geom_line(aes(group=group,linetype = group),position = position_dodge(.1)) +
geom_point(size = 2.5,position = position_dodge(.1))+
scale_y_continuous(limits = c(0,0.40), breaks=seq(0,0.40, by = 0.05),
labels = scales::percent_format(accuracy = 1L)) +
theme_bw() +
labs(title="", y = "") +
theme(plot.title = element_text(size = 11),
axis.text=element_text(size=11))
ggeffects::ggpredict(marchar3, terms = c("ola", "edad")) %>%
ggplot(aes(x=x, y=predicted, shape = group, color = group)) +
geom_line(aes(group=group,linetype = group),position = position_dodge(.1)) +
geom_point(size = 2.5,position = position_dodge(.1))+
scale_y_continuous(limits = c(0,0.40), breaks=seq(0,0.100, by = 0.1),
labels = scales::percent_format(accuracy = 1L)) +
theme_bw() +
labs(title="", y = "") +
theme(plot.title = element_text(size = 11),
axis.text=element_text(size=11))
ggeffects::ggpredict(marchar3, terms = c("ola", "edad")) %>%
ggplot(aes(x=x, y=predicted, shape = group, color = group)) +
geom_line(aes(group=group,linetype = group),position = position_dodge(.1)) +
geom_point(size = 2.5,position = position_dodge(.1))+
scale_y_continuous(limits = c(0,0.40), breaks=seq(0,1, by = 0.1),
labels = scales::percent_format(accuracy = 1L)) +
theme_bw() +
labs(title="", y = "") +
theme(plot.title = element_text(size = 11),
axis.text=element_text(size=11))
ggeffects::ggpredict(marchar3, terms = c("ola", "edad")) %>%
ggplot(aes(x=x, y=predicted, shape = group, color = group)) +
geom_line(aes(group=group,linetype = group),position = position_dodge(.1)) +
geom_point(size = 2.5,position = position_dodge(.1))+
scale_y_continuous(limits = c(0,1), breaks=seq(0,1, by = 0.1),
labels = scales::percent_format(accuracy = 1L)) +
theme_bw() +
labs(title="", y = "") +
theme(plot.title = element_text(size = 11),
axis.text=element_text(size=11))
ggeffects::ggpredict(marchar3, terms = c("ola", "edad")) %>%
ggplot(aes(x=x, y=predicted, shape = group, color = group)) +
geom_line(aes(group=group,linetype = group),position = position_dodge(.1)) +
geom_point(size = 2.5,position = position_dodge(.1))
interact_plot(marchar3, pred = ola, modx = edad, interval = TRUE)
marchar4 <- lmer(part_marchas~ola*edad+(1|idencuesta),data = df_study1, weights = ponderador_long_total)
marchar4 <- lmer(part_marchas~ola_num*edad+(1|idencuesta),data = df_study1, weights = ponderador_long_total)
sim_slopes(marchar4, pred=ola_num, modx=edad, jnplot = TRUE)
sim_slopes(marchar4, pred=edad, modx=ola_num, jnplot = TRUE)
dfPlo1 <- marginaleffects::plot_predictions(marchar3, condition = c("ola", "edad"),draw = F)
plot_educ<-
dfPlo1 %>%
ggplot(aes(y=estimate,x=ola,group=edad,ymin = conf.low, ymax = conf.high)) +
geom_pointrange(size=0.2) +
geom_line()
dfPlo1 %>%
ggplot(aes(y=estimate,x=ola,group=edad,ymin = conf.low, ymax = conf.high)) +
geom_pointrange(size=0.2) +
geom_line()
