"ola7:educTechnical:edadBetween 29 and 45" = "2023 * Technical * Age 29-45",
"ola4:educUniversity or more:edadBetween 29 and 45" = "2019 * University * Age 29-45",
"ola5:educUniversity or more:edadBetween 29 and 45" = "2021 * University * Age 29-45",
"ola6:educUniversity or more:edadBetween 29 and 45" = "2022 * University * Age 29-45",
"ola7:educUniversity or more:edadBetween 29 and 45" = "2023 * University * Age 29-45",
"ola4:educTechnical:edadBetween 24 and 28" = "2019 * Technical * Age 24-28",
"ola5:educTechnical:edadBetween 24 and 28" = "2021 * Technical * Age 24-28",
"ola6:educTechnical:edadBetween 24 and 28" = "2022 * Technical * Age 24-28",
"ola7:educTechnical:edadBetween 24 and 28" = "2023 * Technical * Age 24-28",
"ola4:educUniversity or more:edadBetween 24 and 28" = "2019 * University * Age 24-28",
"ola5:educUniversity or more:edadBetween 24 and 28" = "2021 * University * Age 24-28",
"ola6:educUniversity or more:edadBetween 24 and 28" = "2022 * University * Age 24-28",
"ola7:educUniversity or more:edadBetween 24 and 28" = "2023 * University * Age 24-28",
"ola4:educTechnical:edadBetween 18 and 23" = "2019 * Technical * Age 18-23",
"ola5:educTechnical:edadBetween 18 and 23" = "2021 * Technical * Age 18-23",
"ola6:educTechnical:edadBetween 18 and 23" = "2022 * Technical * Age 18-23",
"ola7:educTechnical:edadBetween 18 and 23" = "2023 * Technical * Age 18-23",
"ola4:educUniversity or more:edadBetween 18 and 23" = "2019 * University * Age 18-23",
"ola5:educUniversity or more:edadBetween 18 and 23" = "2021 * University * Age 18-23",
"ola6:educUniversity or more:edadBetween 18 and 23" = "2022 * University * Age 18-23",
"ola7:educUniversity or more:edadBetween 18 and 23" = "2023 * University * Age 18-23",
"sexoWoman:edadBetween 29 and 45" = "Woman * Age 29-45",
"sexoWoman:edadBetween 29 and 45" = "Woman * Age 24-28",
"sexoWoman:edadBetween 29 and 45" = "Woman * Age 18-23",
"ola4:sexoWoman:edadBetween 29 and 45" = "2019 * Woman * Age 29-45",
"ola5:sexoWoman:edadBetween 29 and 45" = "2021 * Woman * Age 29-45",
"ola6:sexoWoman:edadBetween 29 and 45" = "2022 * Woman * Age 29-45",
"ola7:sexoWoman:edadBetween 29 and 45" = "2023 * Woman * Age 29-45",
"ola4:sexoWoman:edadBetween 24 and 28" = "2019 * Woman * Age 24-28",
"ola5:sexoWoman:edadBetween 24 and 28" = "2021 * Woman * Age 24-28",
"ola6:sexoWoman:edadBetween 24 and 28" = "2022 * Woman * Age 24-28",
"ola7:sexoWoman:edadBetween 24 and 28" = "2023 * Woman * Age 24-28",
"ola4:sexoWoman:edadBetween 18 and 23" = "2019 * Woman * Age 18-23",
"ola5:sexoWoman:edadBetween 18 and 23" = "2021 * Woman * Age 18-23",
"ola6:sexoWoman:edadBetween 18 and 23" = "2022 * Woman * Age 18-23",
"ola7:sexoWoman:edadBetween 18 and 23" = "2023 * Woman * Age 18-23"
)
texreg::knitreg(list(marchar6, marchar7, marchar8, marchar9, marchar10, marchar11,marchar12),
custom.model.names = c(paste0("Model ", seq(6:11))),
caption.above = T,
caption = NULL,
stars = c(0.05, 0.01, 0.001),
custom.coef.map = ccoef2,
digits = 2,
custom.note = "Note: Cells contain regression coefficients with standard errors in parentheses. \n %stars.",
leading.zero = T,
use.packages = F,
booktabs = F,
scalebox = 0.80,
include.loglik = FALSE,
include.aic = FALSE,
center = T,
custom.gof.names = c("BIC", "Numb. obs.", "Num. groups: individuals", "Var: individuals (Intercept)", "Var: Residual"))
ccoef2 <- list(
"(Intercept)" = "Intercept",
"ola4:edadBetween 29 and 45" = "2019*Age 29-45",
"ola5:edadBetween 29 and 45" = "2021*Age 29-45",
"ola6:edadBetween 29 and 45" = "2022*Age 29-45",
"ola7:edadBetween 29 and 45" = "2023*Age 29-45",
"ola4:edadBetween 24 and 28" = "2019*Age 24-28",
"ola5:edadBetween 24 and 28" = "2021*Age 24-28",
"ola6:edadBetween 24 and 28" = "2022*Age 24-28",
"ola7:edadBetween 24 and 28" = "2023*Age 24-28",
"ola4:edadBetween 18 and 23" = "2019*Age 18-23",
"ola5:edadBetween 18 and 23" = "2021*Age 18-23",
"ola6:edadBetween 18 and 23" = "2022*Age 18-23",
"ola7:edadBetween 18 and 23" = "2023*Age 18-23",
"ola4:sexoWoman" = "2019*Woman",
"ola5:sexoWoman" = "2021*Woman",
"ola6:sexoWoman" = "2022*Woman",
"ola7:sexoWoman" = "2023*Woman",
"ola4:educTechnical" = "2019*Technical",
"ola5:educTechnical" = "2021*Technical",
"ola6:educTechnical" = "2022*Technical",
"ola7:educTechnical" = "2023*Technical",
"ola4:educUniversity or more" = "2019*University",
"ola5:educUniversity or more" = "2021*University",
"ola6:educUniversity or more" = "2022*University",
"ola7:educUniversity or more" = "2023*University",
"ola4:pos_idCenter" = "2019*Center",
"ola5:pos_idCenter" = "2021*Center",
"ola6:pos_idCenter" = "2022*Center",
"ola7:pos_idCenter" = "2023*Center",
"ola4:pos_idRight" = "2019*Right",
"ola5:pos_idRight" = "2021*Right",
"ola6:pos_idRight" = "2022*Right",
"ola7:pos_idRight" = "2023*Right",
"ola4:pos_idDoesn't identify" = "2019*Doesn't identify",
"ola5:pos_idDoesn't identify" = "2021*Doesn't identify",
"ola6:pos_idDoesn't identify" = "2022*Doesn't identify",
"ola7:pos_idDoesn't identify" = "2023*Doesn't identify",
"pos_idCenter:edadBetween 29 and 45" = "Center*Age 29-45",
"pos_idRight:edadBetween 29 and 45" = "Right*Age 29-45",
"pos_idDoesn't identify:edadBetween 29 and 45" = "Doesn't identify * Age 29-45",
"pos_idCenter:edadBetween 29 and 45" = "Center*Age 24-28",
"pos_idRight:edadBetween 29 and 45" = "Right*Age 24-28",
"pos_idDoesn't identify:edadBetween 29 and 45" = "Doesn't identify * Age 24-28",
"pos_idCenter:edadBetween 29 and 45" = "Center*Age 18-23",
"pos_idRight:edadBetween 29 and 45" = "Right*Age 18-23",
"pos_idDoesn't identify:edadBetween 29 and 45" = "Doesn't identify * Age 18-23",
"ola4:pos_idCenter:edadBetween 29 and 45" = "2019 * Center * Age 29-45",
"ola5:pos_idCenter:edadBetween 29 and 45" = "2021 * Center * Age 29-45",
"ola6:pos_idCenter:edadBetween 29 and 45" = "2022 * Center * Age 29-45",
"ola7:pos_idCenter:edadBetween 29 and 45" = "2023 * Center * Age 29-45",
"ola4:pos_idRight:edadBetween 29 and 45" = "2019 * Right * Age 29-45",
"ola5:pos_idRight:edadBetween 29 and 45" = "2021 * Right * Age 29-45",
"ola6:pos_idRight:edadBetween 29 and 45" = "2022 * Right * Age 29-45",
"ola7:pos_idRight:edadBetween 29 and 45" = "2023 * Right * Age 29-45",
"ola4:pos_idDoesn't identify:edadBetween 29 and 45" = "2019 * Doesn't identify * Age 29-45",
"ola5:pos_idDoesn't identify:edadBetween 29 and 45" = "2021 * Doesn't identify * Age 29-45",
"ola6:pos_idDoesn't identify:edadBetween 29 and 45" = "2022 * Doesn't identify * Age 29-45",
"ola7:pos_idDoesn't identify:edadBetween 29 and 45" = "2023 * Doesn't identify * Age 29-45",
"ola4:pos_idCenter:edadBetween 24 and 28" = "2019 * Center * Age 24-28",
"ola5:pos_idCenter:edadBetween 24 and 28" = "2021 * Center * Age 24-28",
"ola6:pos_idCenter:edadBetween 24 and 28" = "2022 * Center * Age 24-28",
"ola7:pos_idCenter:edadBetween 24 and 28" = "2023 * Center * Age 24-28",
"ola4:pos_idRight:edadBetween 24 and 28" = "2019 * Right * Age 24-28",
"ola5:pos_idRight:edadBetween 24 and 28" = "2021 * Right * Age 24-28",
"ola6:pos_idRight:edadBetween 24 and 28" = "2022 * Right * Age 24-28",
"ola7:pos_idRight:edadBetween 24 and 28" = "2023 * Right * Age 24-28",
"ola4:pos_idDoesn't identify:edadBetween 24 and 28" = "2019 * Doesn't identify * Age 24-28",
"ola5:pos_idDoesn't identify:edadBetween 24 and 28" = "2021 * Doesn't identify * Age 24-28",
"ola6:pos_idDoesn't identify:edadBetween 24 and 28" = "2022 * Doesn't identify * Age 24-28",
"ola7:pos_idDoesn't identify:edadBetween 24 and 28" = "2023 * Doesn't identify * Age 24-28",
"ola4:pos_idCenter:edadBetween 18 and 23" = "2019 * Center * Age 18-23",
"ola5:pos_idCenter:edadBetween 18 and 23" = "2021 * Center * Age 18-23",
"ola6:pos_idCenter:edadBetween 18 and 23" = "2022 * Center * Age 18-23",
"ola7:pos_idCenter:edadBetween 18 and 23" = "2023 * Center * Age 18-23",
"ola4:pos_idRight:edadBetween 18 and 23" = "2019 * Right * Age 18-23",
"ola5:pos_idRight:edadBetween 18 and 23" = "2021 * Right * Age 18-23",
"ola6:pos_idRight:edadBetween 18 and 23" = "2022 * Right * Age 18-23",
"ola7:pos_idRight:edadBetween 18 and 23" = "2023 * Right * Age 18-23",
"ola4:pos_idDoesn't identify:edadBetween 18 and 23" = "2019 * Doesn't identify * Age 18-23",
"ola5:pos_idDoesn't identify:edadBetween 18 and 23" = "2021 * Doesn't identify * Age 18-23",
"ola6:pos_idDoesn't identify:edadBetween 18 and 23" = "2022 * Doesn't identify * Age 18-23",
"ola7:pos_idDoesn't identify:edadBetween 18 and 23" = "2023 * Doesn't identify * Age 18-23",
"educTechnical:edadBetween 29 and 45" = "Technical * Age 29-45",
"educUniversity or more:edadBetween 29 and 45" = "University * Age 29-45",
"educTechnical:edadBetween 24 and 28" = "Technical * Age 24-28",
"educUniversity or more:edadBetween 24 and 28" = "University * Age 24-28",
"educTechnical:edadBetween 18 and 23" = "Technical * Age 18-23",
"educUniversity or more:edadBetween 18 and 23" = "University * Age 18-23",
"ola4:educTechnical:edadBetween 29 and 45" = "2019 * Technical * Age 29-45",
"ola5:educTechnical:edadBetween 29 and 45" = "2021 * Technical * Age 29-45",
"ola6:educTechnical:edadBetween 29 and 45" = "2022 * Technical * Age 29-45",
"ola7:educTechnical:edadBetween 29 and 45" = "2023 * Technical * Age 29-45",
"ola4:educUniversity or more:edadBetween 29 and 45" = "2019 * University * Age 29-45",
"ola5:educUniversity or more:edadBetween 29 and 45" = "2021 * University * Age 29-45",
"ola6:educUniversity or more:edadBetween 29 and 45" = "2022 * University * Age 29-45",
"ola7:educUniversity or more:edadBetween 29 and 45" = "2023 * University * Age 29-45",
"ola4:educTechnical:edadBetween 24 and 28" = "2019 * Technical * Age 24-28",
"ola5:educTechnical:edadBetween 24 and 28" = "2021 * Technical * Age 24-28",
"ola6:educTechnical:edadBetween 24 and 28" = "2022 * Technical * Age 24-28",
"ola7:educTechnical:edadBetween 24 and 28" = "2023 * Technical * Age 24-28",
"ola4:educUniversity or more:edadBetween 24 and 28" = "2019 * University * Age 24-28",
"ola5:educUniversity or more:edadBetween 24 and 28" = "2021 * University * Age 24-28",
"ola6:educUniversity or more:edadBetween 24 and 28" = "2022 * University * Age 24-28",
"ola7:educUniversity or more:edadBetween 24 and 28" = "2023 * University * Age 24-28",
"ola4:educTechnical:edadBetween 18 and 23" = "2019 * Technical * Age 18-23",
"ola5:educTechnical:edadBetween 18 and 23" = "2021 * Technical * Age 18-23",
"ola6:educTechnical:edadBetween 18 and 23" = "2022 * Technical * Age 18-23",
"ola7:educTechnical:edadBetween 18 and 23" = "2023 * Technical * Age 18-23",
"ola4:educUniversity or more:edadBetween 18 and 23" = "2019 * University * Age 18-23",
"ola5:educUniversity or more:edadBetween 18 and 23" = "2021 * University * Age 18-23",
"ola6:educUniversity or more:edadBetween 18 and 23" = "2022 * University * Age 18-23",
"ola7:educUniversity or more:edadBetween 18 and 23" = "2023 * University * Age 18-23",
"sexoWoman:edadBetween 29 and 45" = "Woman * Age 29-45",
"sexoWoman:edadBetween 29 and 45" = "Woman * Age 24-28",
"sexoWoman:edadBetween 29 and 45" = "Woman * Age 18-23",
"ola4:sexoWoman:edadBetween 29 and 45" = "2019 * Woman * Age 29-45",
"ola5:sexoWoman:edadBetween 29 and 45" = "2021 * Woman * Age 29-45",
"ola6:sexoWoman:edadBetween 29 and 45" = "2022 * Woman * Age 29-45",
"ola7:sexoWoman:edadBetween 29 and 45" = "2023 * Woman * Age 29-45",
"ola4:sexoWoman:edadBetween 24 and 28" = "2019 * Woman * Age 24-28",
"ola5:sexoWoman:edadBetween 24 and 28" = "2021 * Woman * Age 24-28",
"ola6:sexoWoman:edadBetween 24 and 28" = "2022 * Woman * Age 24-28",
"ola7:sexoWoman:edadBetween 24 and 28" = "2023 * Woman * Age 24-28",
"ola4:sexoWoman:edadBetween 18 and 23" = "2019 * Woman * Age 18-23",
"ola5:sexoWoman:edadBetween 18 and 23" = "2021 * Woman * Age 18-23",
"ola6:sexoWoman:edadBetween 18 and 23" = "2022 * Woman * Age 18-23",
"ola7:sexoWoman:edadBetween 18 and 23" = "2023 * Woman * Age 18-23"
)
texreg::knitreg(list(marchar6, marchar7, marchar8, marchar9, marchar10, marchar11,marchar12),
custom.model.names = c(paste0("Model ", seq(6:12))),
caption.above = T,
caption = NULL,
stars = c(0.05, 0.01, 0.001),
custom.coef.map = ccoef2,
digits = 2,
custom.note = "Note: Cells contain regression coefficients with standard errors in parentheses. \n %stars.",
leading.zero = T,
use.packages = F,
booktabs = F,
scalebox = 0.80,
include.loglik = FALSE,
include.aic = FALSE,
center = T,
custom.gof.names = c("BIC", "Numb. obs.", "Num. groups: individuals", "Var: individuals (Intercept)", "Var: Residual"))
marchar12@beta[44:61]
View(marchar12)
marchar12@beta[34:45]
marchar12@beta[34:45]
marchar11@beta
marchar11@beta[41:64]
marchar10@beta
marchar10@beta[48:83]
marchar12@beta[34:45]
betas <- marchar12@beta                           # Coeficientes
vcov_mat <- as.matrix(vcov(marchar12))              # Matriz de varianzas-covarianzas
ses <- sqrt(diag(vcov_mat))                         # Errores estándar
tvals <- betas / ses                              # Valores t
ses <- ses[34:45]
betas <- betas[34:45]
tvals <- tvals[34:45]
pvals <- 2 * pnorm(-abs(tvals))  # Aproximación tipo Wald (z-score)
signif_stars <- ifelse(pvals <= 0.001, "***",
ifelse(pvals <= 0.01, "**",
ifelse(pvals <= 0.05, "*", "")))
olasexoedad<-data.frame(
Estimate = betas,
Signif = signif_stars
)
marchar11@beta[41:64]
betas <- marchar11@beta                          # Coeficientes
vcov_mat <- as.matrix(vcov(marchar11))              # Matriz de varianzas-covarianzas
ses <- sqrt(diag(vcov_mat))                         # Errores estándar
tvals <- betas / ses                              # Valores t
ses <- ses[41:64]
betas <- betas[41:64]
tvals <- tvals[41:64]
pvals <- 2 * pnorm(-abs(tvals))  # Aproximación tipo Wald (z-score)
signif_stars <- ifelse(pvals <= 0.001, "***",
ifelse(pvals <= 0.01, "**",
ifelse(pvals <= 0.05, "*", "")))
olaeducedad<-data.frame(
Estimate = betas,
Signif = signif_stars
)
marchar10@beta[48:83]
betas <- marchar10@beta                          # Coeficientes
vcov_mat <- as.matrix(vcov(marchar10))              # Matriz de varianzas-covarianzas
ses <- sqrt(diag(vcov_mat))                         # Errores estándar
tvals <- betas / ses                              # Valores t
ses <- ses[62:115]
betas <- betas[62:115]
tvals <- tvals[62:115]
pvals <- 2 * pnorm(-abs(tvals))  # Aproximación tipo Wald (z-score)
signif_stars <- ifelse(pvals <= 0.001, "***",
ifelse(pvals <= 0.01, "**",
ifelse(pvals <= 0.05, "*", "")))
olapospoledad<-data.frame(
Estimate = betas,
Signif = signif_stars
)
# Woman (olasexoedad) – 12 términos
woman_idx <- c(1, 5, 9,   # 29–45
2, 6,10,   # 24–28
3, 7,11,   # 18–23
4, 8,12)   # orden por ola: 2019, 2021, 2022, 2023
# Technical (olaeducedad) – 24 términos
technical_idx <- c(1, 9,17,  # 29–45
2,10,18,  # 24–28
3,11,19,  # 18–23
4,12,20)  # ola 2021
# university ocupa las posiciones 5:8, 13:16, 21:24
university_idx <- c(5,13,21,  # 29–45
6,14,22,  # 24–28
7,15,23,  # 18–23
8,16,24)
# Center (olapospoledad) – 36 términos
center_idx <- c(1,13,25,  # 29–45
2,14,26,  # 24–28
3,15,27,  # 18–23
4,16,28)  # ola 2021
right_idx <-  c(5,17,29,  # 29–45
6,18,30,
7,19,31,
8,20,32)
dni_idx   <-  c(9,21,33,
10,22,34,
11,23,35,
12,24,36)
tabla <- cbind(
Year = c("2019", "2019", "2019",
"2021", "2021", "2021",
"2022", "2022", "2022",
"2023", "2023", "2023"),
Age = rep(c("29–45", "24–28", "18–23"), times = 6),
Woman = paste0(round(olasexoedad$Estimate[woman_idx], 2), olasexoedad$Signif[woman_idx]),
Technical = paste0(round(olaeducedad$Estimate[technical_idx], 2), olaeducedad$Signif[technical_idx]),
University = paste0(round(olaeducedad$Estimate[university_idx], 2), olaeducedad$Signif[university_idx]),
Center = paste0(round(olapospoledad$Estimate[center_idx], 2), olapospoledad$Signif[center_idx]),
Right = paste0(round(olapospoledad$Estimate[right_idx], 2), olapospoledad$Signif[right_idx]),
`Doesnt Identify` = paste0(round(olapospoledad$Estimate[dni_idx], 2), olapospoledad$Signif[dni_idx])
)
marchar12@beta[34:45]
betas <- marchar12@beta                           # Coeficientes
vcov_mat <- as.matrix(vcov(marchar12))              # Matriz de varianzas-covarianzas
ses <- sqrt(diag(vcov_mat))                         # Errores estándar
tvals <- betas / ses                              # Valores t
ses <- ses[34:45]
betas <- betas[34:45]
tvals <- tvals[34:45]
pvals <- 2 * pnorm(-abs(tvals))  # Aproximación tipo Wald (z-score)
signif_stars <- ifelse(pvals <= 0.001, "***",
ifelse(pvals <= 0.01, "**",
ifelse(pvals <= 0.05, "*", "")))
olasexoedad<-data.frame(
Estimate = betas,
Signif = signif_stars
)
marchar11@beta[41:64]
betas <- marchar11@beta                          # Coeficientes
vcov_mat <- as.matrix(vcov(marchar11))              # Matriz de varianzas-covarianzas
ses <- sqrt(diag(vcov_mat))                         # Errores estándar
tvals <- betas / ses                              # Valores t
ses <- ses[41:64]
betas <- betas[41:64]
tvals <- tvals[41:64]
pvals <- 2 * pnorm(-abs(tvals))  # Aproximación tipo Wald (z-score)
signif_stars <- ifelse(pvals <= 0.001, "***",
ifelse(pvals <= 0.01, "**",
ifelse(pvals <= 0.05, "*", "")))
olaeducedad<-data.frame(
Estimate = betas,
Signif = signif_stars
)
marchar10@beta[48:83]
betas <- marchar10@beta                          # Coeficientes
vcov_mat <- as.matrix(vcov(marchar10))              # Matriz de varianzas-covarianzas
ses <- sqrt(diag(vcov_mat))                         # Errores estándar
tvals <- betas / ses                              # Valores t
ses <- ses[62:115]
betas <- betas[62:115]
tvals <- tvals[62:115]
pvals <- 2 * pnorm(-abs(tvals))  # Aproximación tipo Wald (z-score)
signif_stars <- ifelse(pvals <= 0.001, "***",
ifelse(pvals <= 0.01, "**",
ifelse(pvals <= 0.05, "*", "")))
olapospoledad<-data.frame(
Estimate = betas,
Signif = signif_stars
)
# Woman (olasexoedad) – 12 términos
woman_idx <- c(1, 5, 9,   # 29–45
2, 6,10,   # 24–28
3, 7,11,   # 18–23
4, 8,12)   # orden por ola: 2019, 2021, 2022, 2023
# Technical (olaeducedad) – 24 términos
technical_idx <- c(1, 9,17,  # 29–45
2,10,18,  # 24–28
3,11,19,  # 18–23
4,12,20)  # ola 2021
# university ocupa las posiciones 5:8, 13:16, 21:24
university_idx <- c(5,13,21,  # 29–45
6,14,22,  # 24–28
7,15,23,  # 18–23
8,16,24)
# Center (olapospoledad) – 36 términos
center_idx <- c(1,13,25,  # 29–45
2,14,26,  # 24–28
3,15,27,  # 18–23
4,16,28)  # ola 2021
right_idx <-  c(5,17,29,  # 29–45
6,18,30,
7,19,31,
8,20,32)
dni_idx   <-  c(9,21,33,
10,22,34,
11,23,35,
12,24,36)
tabla <- cbind(
Year = c("2019", "2019", "2019",
"2021", "2021", "2021",
"2022", "2022", "2022",
"2023", "2023", "2023"),
Age = rep(c("29–45", "24–28", "18–23"), times = 4),
Woman = paste0(round(olasexoedad$Estimate[woman_idx], 2), olasexoedad$Signif[woman_idx]),
Technical = paste0(round(olaeducedad$Estimate[technical_idx], 2), olaeducedad$Signif[technical_idx]),
University = paste0(round(olaeducedad$Estimate[university_idx], 2), olaeducedad$Signif[university_idx]),
Center = paste0(round(olapospoledad$Estimate[center_idx], 2), olapospoledad$Signif[center_idx]),
Right = paste0(round(olapospoledad$Estimate[right_idx], 2), olapospoledad$Signif[right_idx]),
`Doesnt Identify` = paste0(round(olapospoledad$Estimate[dni_idx], 2), olapospoledad$Signif[dni_idx])
)
View(tabla)
View(olasexoedad)
View(olaeducedad)
View(olapospoledad)
marchar12@beta[34:45]
betas <- marchar12@beta                           # Coeficientes
vcov_mat <- as.matrix(vcov(marchar12))              # Matriz de varianzas-covarianzas
ses <- sqrt(diag(vcov_mat))                         # Errores estándar
tvals <- betas / ses                              # Valores t
ses <- ses[34:45]
betas <- betas[34:45]
tvals <- tvals[34:45]
pvals <- 2 * pnorm(-abs(tvals))  # Aproximación tipo Wald (z-score)
signif_stars <- ifelse(pvals <= 0.001, "***",
ifelse(pvals <= 0.01, "**",
ifelse(pvals <= 0.05, "*", "")))
olasexoedad<-data.frame(
Estimate = betas,
Signif = signif_stars
)
marchar11@beta[41:64]
betas <- marchar11@beta                          # Coeficientes
vcov_mat <- as.matrix(vcov(marchar11))              # Matriz de varianzas-covarianzas
ses <- sqrt(diag(vcov_mat))                         # Errores estándar
tvals <- betas / ses                              # Valores t
ses <- ses[41:64]
betas <- betas[41:64]
tvals <- tvals[41:64]
pvals <- 2 * pnorm(-abs(tvals))  # Aproximación tipo Wald (z-score)
signif_stars <- ifelse(pvals <= 0.001, "***",
ifelse(pvals <= 0.01, "**",
ifelse(pvals <= 0.05, "*", "")))
olaeducedad<-data.frame(
Estimate = betas,
Signif = signif_stars
)
marchar10@beta[48:83]
betas <- marchar10@beta                          # Coeficientes
vcov_mat <- as.matrix(vcov(marchar10))              # Matriz de varianzas-covarianzas
ses <- sqrt(diag(vcov_mat))                         # Errores estándar
tvals <- betas / ses                              # Valores t
ses <- ses[48:83]
betas <- betas[48:83]
tvals <- tvals[48:83]
pvals <- 2 * pnorm(-abs(tvals))  # Aproximación tipo Wald (z-score)
signif_stars <- ifelse(pvals <= 0.001, "***",
ifelse(pvals <= 0.01, "**",
ifelse(pvals <= 0.05, "*", "")))
olapospoledad<-data.frame(
Estimate = betas,
Signif = signif_stars
)
# Woman (olasexoedad) – 12 términos
woman_idx <- c(1, 5, 9,   # 29–45
2, 6,10,   # 24–28
3, 7,11,   # 18–23
4, 8,12)   # orden por ola: 2019, 2021, 2022, 2023
# Technical (olaeducedad) – 24 términos
technical_idx <- c(1, 9,17,  # 29–45
2,10,18,  # 24–28
3,11,19,  # 18–23
4,12,20)  # ola 2021
# university ocupa las posiciones 5:8, 13:16, 21:24
university_idx <- c(5,13,21,  # 29–45
6,14,22,  # 24–28
7,15,23,  # 18–23
8,16,24)
# Center (olapospoledad) – 36 términos
center_idx <- c(1,13,25,  # 29–45
2,14,26,  # 24–28
3,15,27,  # 18–23
4,16,28)  # ola 2021
right_idx <-  c(5,17,29,  # 29–45
6,18,30,
7,19,31,
8,20,32)
dni_idx   <-  c(9,21,33,
10,22,34,
11,23,35,
12,24,36)
tabla <- cbind(
Year = c("2019", "2019", "2019",
"2021", "2021", "2021",
"2022", "2022", "2022",
"2023", "2023", "2023"),
Age = rep(c("29–45", "24–28", "18–23"), times = 4),
Woman = paste0(round(olasexoedad$Estimate[woman_idx], 2), olasexoedad$Signif[woman_idx]),
Technical = paste0(round(olaeducedad$Estimate[technical_idx], 2), olaeducedad$Signif[technical_idx]),
University = paste0(round(olaeducedad$Estimate[university_idx], 2), olaeducedad$Signif[university_idx]),
Center = paste0(round(olapospoledad$Estimate[center_idx], 2), olapospoledad$Signif[center_idx]),
Right = paste0(round(olapospoledad$Estimate[right_idx], 2), olapospoledad$Signif[right_idx]),
`Doesnt Identify` = paste0(round(olapospoledad$Estimate[dni_idx], 2), olapospoledad$Signif[dni_idx])
)
View(tabla)
kbl(tabla,
align = "c") %>%
kable_paper("hover",full_width = F) %>%
column_spec(1, bold = T) %>%
collapse_rows(columns = 1, valign = "middle")
kbl(tabla,
align = "c") %>%
add_header_above(c(" " = 3,
"Education"=2,
"Political position"=3),
bold = T)%>%
kable_paper("hover",full_width = F) %>%
column_spec(1, bold = T) %>%
collapse_rows(columns = 1, valign = "middle")
kbl(tabla,
align = "c") %>%
add_header_above(c(" " = 3,
"Education"=2,
"Political position"=3),
bold = T)%>%
kable_paper("hover",full_width = F) %>%
column_spec(1, bold = T) %>%
collapse_rows(columns = 1, valign = "middle") %>%
footnote("Note:")
kbl(tabla,
align = "c") %>%
add_header_above(c(" " = 3,
"Education"=2,
"Political position"=3),
bold = T)%>%
kable_paper("hover",full_width = F) %>%
column_spec(1, bold = T) %>%
collapse_rows(columns = 1, valign = "middle") %>%
footnote("p<0.05")
