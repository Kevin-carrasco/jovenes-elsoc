---
title: "02-analisis"
format:
  html:
    toc: true
editor: visual
---

# Setup

```{r setup}
knitr::opts_chunk$set(
	echo = FALSE,
	results = "asis",
	message = FALSE,
	warning = FALSE, 
	fig.height = 14, 
	fig.width = 14, 
	cache = FALSE
)
options(scipen=9999) # desactivar notacion cientifica
remove(list = ls()) #limpieza del entorno de trabajo
```

```{css, echo=FALSE}
# /* expandir el espacio del documento*/
body .main-container {
      max-width: 1600px !important;
      width: 1600px !important;
    }
#/* expandir width de la TOC*/
div.tocify {
    width: 22% !important;
    max-width: 331px !important;
    max-height: 102% !important;
}
```


```{r tab-desc, results="asis", warning=FALSE}
if (!require("pacman")) install.packages("pacman") # instalar pacman
                            # cargar librerias
pacman::p_load(dplyr,       # Manipulacion de datos
               knitr,
               kableExtra,
               summarytools,
               ggplot2,
               sjPlot,
               tidyverse,
               ggalluvial,
               survey,
               shadowtext,
               srvyr,
               interactions
               )
load(file = here::here("input/data-proc/df_study1_long_t7.RData"))

# Css
st_css()
st_options(lang = "en",
           footnote = NA,
           bootstrap.css = F,
           custom.css = here::here("input/css/dfsummary.css"),
           dfSummary.custom.1 = NA
           )  

# Df variables nivel 1
# df<- dfSummary(df_study1_long %>% select(in_simpat:edad),
#                plain.ascii = FALSE,
#                style = "grid",
#                tmp.img.dir = "/tmp",
#                graph.magnif = TRUE,
#                headings = F,  # encabezado
#                varnumbers = F, # num variable
#                labels.col = T, # etiquetas
#                na.col = F,    # missing
#                graph.col = T, # plot
#                valid.col = T, # n valido
#                col.widths = c(700,10,10,10,10)
#                )
# df$Variable <- NULL # delete variable column
# view(df,
#      file = here::here("output/tables/desc01.html")
#      ) # Ver tabla en un archivo HTML
# webshot::webshot(url =here::here("output/tables/desc01.html"),
#         file =here::here("output/tables/desc01.png")) # Remover archivo HTML
# # print(df, method = "render")

# Df variables nivel 1 _________________________________________________________
df_study1 <- df_study1_long_t7 %>% dplyr::select(idencuesta,ola, segmento, estrato, ponderador_long_total,
                                                 part_marchas,
                                                 part_rrss,
                                                 mov_estudiantil,
                                                 mov_feminista,
                                                 part_electoral,
                                                 interes_pol,
                                                 voto_influye,
                                                 autoritarismo1,
                                                 autoritarismo2,
                                                 autoritarismo3,
                                                 autoritarismo4,
                                                 autoritarismo5,
                                                 adop_homo,
                                                 aborto,
                                                 restriccion_migrantes,
                                                 pensiones,
                                                 perc_des,
                                                 rol_estado_educ,
                                                 edad)

df_study1$ola <- factor(df_study1$ola,
         labels = c("2016","2017","2018","2019", "2021", "2022", "2023"))
df_study1$ola <- 
sjlabelled::set_label(x = df_study1$ola,
                      label = "Ola")



# df_study1$sexo <- factor(df_study1$sexo,
#          labels = c("Hombre", "Mujer"))
# df_study1$sexo <- 
# sjlabelled::set_label(x = df_study1$sexo,
#                       label = "Sexo")


df_study1$part_marchas <- 
sjlabelled::set_label(x = df_study1$part_marchas,
                      label = "Frecuencia: asiste a marchar")

#df_study1$part_com <- 
#sjlabelled::set_label(x = df_study1$part_com, 
#                      label = "Frecuencia: reuniones publicas/comunitarias")


lab_study1 <- sjlabelled::get_label(df_study1) 
df_study1 <- df_study1 %>% na.omit() %>% sjlabelled::set_label(lab_study1)

df<- dfSummary(x = dplyr::select(df_study1, ola, part_marchas:edad),
               plain.ascii = FALSE,
               style = "grid",
               tmp.img.dir = "/tmp",
               graph.magnif = TRUE,
               headings = F,  # encabezado
               varnumbers = F, # num variable
               labels.col = T, # etiquetas
               na.col = F,    # missing
               graph.col = T, # plot
               valid.col = F, # n valido
               col.widths = c(700,10,10,10)
               )
df$Variable <- NULL # delete variable column
summarytools::view(df,
     file = here::here("output/tables/desc02.html")
     ) # Ver tabla en un archivo HTML
webshot::webshot(url =here::here("output/tables/desc02.html"),
        file =here::here("output/tables/desc02.png")) # Remover archivo HTML
# print(df, method = "render")
```

```{r}
colors<- c("#f1eef6ff","#bdc9e1ff","#b3b3b3ff","#74a9cfff","#0570b0ff")
```

# Participación en marchas (en todas las olas)

```{r}
load(file = here::here("input/data-proc/df_study1_long_t7.RData"))
df_study1 <- df_study1_long_t7 %>% dplyr::select(idencuesta,ola, segmento, estrato, ponderador_long_total,
                                                 part_marchas,
                                                 edad) %>% na.omit()
df_study1 <- df_study1[complete.cases(df_study1$segmento), ]

df_study1$part_marchas <- factor(df_study1$part_marchas,
         labels = c("Nunca", "Casi nunca", "A veces", "Frecuentemente", "Muy 
frecuentemente"))

elsoc_diseno <- svydesign(ids = ~segmento, #muestreo por conglomerado a nivel de manzanas (segmento)
                          strata = ~estrato, #muestreo estratificado a nivel ciudad (estato)
                          weights = ~ponderador_long_total, #ponderador longitudinal
                          nest = TRUE,
                          data = df_study1)


#Paso 1
datos.marchar <- data.frame((svytable(~part_marchas + ola + idencuesta, elsoc_diseno, round = F))) %>% 
  dplyr::filter(Freq>0)  %>% group_by(ola) %>% 
  mutate(porcentaje=Freq/sum(Freq)) %>% na.omit()

#Paso 2
etiquetas.marchar <- data.frame((svytable(~part_marchas + ola, elsoc_diseno, round = F))) %>% 
  group_by(ola) %>% mutate(porcentaje=Freq/sum(Freq)) %>% na.omit() %>% 
  mutate(idencuesta = 1)

datos.marchar$part_marchas <- factor(datos.marchar$part_marchas, levels = rev(levels(datos.marchar$part_marchas)))
etiquetas.marchar$part_marchas <- factor(etiquetas.marchar$part_marchas, levels = rev(levels(etiquetas.marchar$part_marchas)))

ggplot(datos.marchar, aes(x = ola, fill = part_marchas, stratum = part_marchas,
                             alluvium = idencuesta, y = porcentaje))+
    ggalluvial::geom_flow(alpha = .66) + 
    ggalluvial::geom_stratum(linetype = 0) +
    scale_y_continuous(labels = scales::percent) + 
    ylab(label = NULL) +
    xlab(label = NULL) + 
    theme(#legend.position = 'top',
          legend.title = element_blank(),
          plot.caption = element_text(hjust = 1)) +
    scale_fill_manual(values = colors) +
    geom_shadowtext(data = etiquetas.marchar, 
              aes(label = ifelse(porcentaje > 0 , scales::percent(porcentaje, accuracy = .1),"")),
              position = position_stack(vjust = .5),
              show.legend = FALSE,
              size = 4,
              color = rep('white'),
              bg.colour='grey30')+
  scale_x_discrete(labels = c(2016, 2017, 2018, 2019, 2021, 2022, 2023))
```

## Regresión

```{r}
#if (!require("pacman")) install.packages("pacman") # instalar pacman
                            # cargar librerias
pacman::p_load(dplyr,       # Manipulacion de datos
               knitr,
               kableExtra,
               summarytools,
               lme4,
               texreg
               )
load(file = here::here("input/data-proc/df_study1_long_t7.RData"))

# generate analytical sample
df_study1 <- 
  df_study1_long_t7 %>%
  select(idencuesta,ola,part_marchas, edad, ponderador_long_total) %>% 
  na.omit() %>% 
  mutate(ola_num=as.numeric(ola),
         ola=as.factor(ola)
         )
# Hipotesis
h1 <- "ola"
h2 <- "ola+edad"
h3 <- "ola*edad"

marchar.null <- lmer(formula(paste0("part_marchas~","1 + (1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
marchar1 <- lmer(formula(paste0("part_marchas~",h1,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
marchar2 <- lmer(formula(paste0("part_marchas~",h2,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
marchar3 <- lmer(formula(paste0("part_marchas~",h3,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)

performance::icc(marchar.null)
```

```{r results='asis'}
texreg::htmlreg(list(marchar.null, marchar1, marchar2, marchar3),
                custom.note = "*** p < 0.001; ** p < 0.01; * p < 0.05")
```

### interacciones

```{r}
interact_plot(marchar3, pred = ola, modx = edad, interval = TRUE)
```


# Participación en redes sociales (en todas las olas)

```{r}
load(file = here::here("input/data-proc/df_study1_long_t7.RData"))
df_study1 <- df_study1_long_t7 %>% dplyr::select(idencuesta,ola, segmento, estrato, ponderador_long_total,
                                                 part_rrss,
                                                 edad) %>% na.omit()
df_study1 <- df_study1[complete.cases(df_study1$segmento), ]

df_study1$part_rrss <- factor(df_study1$part_rrss,
         labels = c("Nunca", "Casi nunca", "A veces", "Frecuentemente", "Muy 
frecuentemente"))

elsoc_diseno <- svydesign(ids = ~segmento, #muestreo por conglomerado a nivel de manzanas (segmento)
                          strata = ~estrato, #muestreo estratificado a nivel ciudad (estato)
                          weights = ~ponderador_long_total, #ponderador longitudinal
                          nest = TRUE,
                          data = df_study1)


#Paso 1
datos.marchar <- data.frame((svytable(~part_rrss + ola + idencuesta, elsoc_diseno, round = F))) %>% 
  dplyr::filter(Freq>0)  %>% group_by(ola) %>% 
  mutate(porcentaje=Freq/sum(Freq)) %>% na.omit()

#Paso 2
etiquetas.marchar <- data.frame((svytable(~part_rrss + ola, elsoc_diseno, round = F))) %>% 
  group_by(ola) %>% mutate(porcentaje=Freq/sum(Freq)) %>% na.omit() %>% 
  mutate(idencuesta = 1)

datos.marchar$part_rrss <- factor(datos.marchar$part_rrss, levels = rev(levels(datos.marchar$part_rrss)))
etiquetas.marchar$part_rrss <- factor(etiquetas.marchar$part_rrss, levels = rev(levels(etiquetas.marchar$part_rrss)))

ggplot(datos.marchar, aes(x = ola, fill = part_rrss, stratum = part_rrss,
                             alluvium = idencuesta, y = porcentaje))+
    ggalluvial::geom_flow(alpha = .66) + 
    ggalluvial::geom_stratum(linetype = 0) +
    scale_y_continuous(labels = scales::percent) + 
    ylab(label = NULL) +
    xlab(label = NULL) + 
    theme(#legend.position = 'top',
          legend.title = element_blank(),
          plot.caption = element_text(hjust = 1)) +
    scale_fill_manual(values = colors) +
    geom_shadowtext(data = etiquetas.marchar, 
              aes(label = ifelse(porcentaje > 0 , scales::percent(porcentaje, accuracy = .1),"")),
              position = position_stack(vjust = .5),
              show.legend = FALSE,
              size = 4,
              color = rep('white'),
              bg.colour='grey30')+
  scale_x_discrete(labels = c(2016, 2017, 2018, 2019, 2021, 2022, 2023))
```

## Regresión

```{r}
if (!require("pacman")) install.packages("pacman") # instalar pacman
                            # cargar librerias
pacman::p_load(dplyr,       # Manipulacion de datos
               knitr,
               kableExtra,
               summarytools,
               lme4,
               texreg
               )
load(file = here::here("input/data-proc/df_study1_long_t7.RData"))

# generate analytical sample
df_study1 <- 
  df_study1_long_t7 %>%
  select(idencuesta,ola,part_rrss, edad, ponderador_long_total) %>% 
  na.omit() %>% 
  mutate(ola_num=as.numeric(ola),
         ola=as.factor(ola)
         )
# Hipotesis
h1 <- "ola"
h2 <- "ola+edad"
h3 <- "ola*edad"

marchar.null <- lmer(formula(paste0("part_rrss~","1 + (1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
marchar1 <- lmer(formula(paste0("part_rrss~",h1,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
marchar2 <- lmer(formula(paste0("part_rrss~",h2,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
marchar3 <- lmer(formula(paste0("part_rrss~",h3,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)

performance::icc(marchar.null)
```

```{r results='asis'}
texreg::htmlreg(list(marchar.null, marchar1, marchar2, marchar3),
                custom.note = "*** p < 0.001; ** p < 0.01; * p < 0.05")
```

### interacciones

```{r}
interact_plot(marchar3, pred = ola, modx = edad, interval = TRUE)
```

# Apoyo mov estudiantil (todas las olas)

```{r}
load(file = here::here("input/data-proc/df_study1_long_t7.RData"))

df_study1 <- df_study1_long_t7 %>% dplyr::select(idencuesta,ola, segmento, estrato, ponderador_long_total,
                                                 mov_estudiantil,
                                                 edad) %>% na.omit()
df_study1 <- df_study1[complete.cases(df_study1$segmento), ]

df_study1$mov_estudiantil <- factor(df_study1$mov_estudiantil,
         labels = c("No", "Si"))

elsoc_diseno <- svydesign(ids = ~segmento, #muestreo por conglomerado a nivel de manzanas (segmento)
                          strata = ~estrato, #muestreo estratificado a nivel ciudad (estato)
                          weights = ~ponderador_long_total, #ponderador longitudinal
                          nest = TRUE,
                          data = df_study1)


#Paso 1
datos.marchar <- data.frame((svytable(~mov_estudiantil + ola + idencuesta, elsoc_diseno, round = F))) %>% 
  dplyr::filter(Freq>0)  %>% group_by(ola) %>% 
  mutate(porcentaje=Freq/sum(Freq)) %>% na.omit()

#Paso 2
etiquetas.marchar <- data.frame((svytable(~mov_estudiantil + ola, elsoc_diseno, round = F))) %>% 
  group_by(ola) %>% mutate(porcentaje=Freq/sum(Freq)) %>% na.omit() %>% 
  mutate(idencuesta = 1)

datos.marchar$mov_estudiantil <- factor(datos.marchar$mov_estudiantil, levels = rev(levels(datos.marchar$mov_estudiantil)))
etiquetas.marchar$mov_estudiantil <- factor(etiquetas.marchar$mov_estudiantil, levels = rev(levels(etiquetas.marchar$mov_estudiantil)))

ggplot(datos.marchar, aes(x = ola, fill = mov_estudiantil, stratum = mov_estudiantil,
                             alluvium = idencuesta, y = porcentaje))+
    ggalluvial::geom_flow(alpha = .66) + 
    ggalluvial::geom_stratum(linetype = 0) +
    scale_y_continuous(labels = scales::percent) + 
    ylab(label = NULL) +
    xlab(label = NULL) + 
    theme(#legend.position = 'top',
          legend.title = element_blank(),
          plot.caption = element_text(hjust = 1)) +
    scale_fill_manual(values = colors) +
    geom_shadowtext(data = etiquetas.marchar, 
              aes(label = ifelse(porcentaje > 0 , scales::percent(porcentaje, accuracy = .1),"")),
              position = position_stack(vjust = .5),
              show.legend = FALSE,
              size = 4,
              color = rep('white'),
              bg.colour='grey30')+
  scale_x_discrete(labels = c(2016, 2017, 2018, 2019, 2021, 2022, 2023))
```

## Regresión

```{r}
#if (!require("pacman")) install.packages("pacman") # instalar pacman
                            # cargar librerias
pacman::p_load(dplyr,       # Manipulacion de datos
               knitr,
               kableExtra,
               summarytools,
               lme4,
               texreg
               )
load(file = here::here("input/data-proc/df_study1_long_t7.RData"))

# generate analytical sample
df_study1 <- 
  df_study1_long_t7 %>%
  select(idencuesta,ola,mov_estudiantil, edad, ponderador_long_total) %>% 
  na.omit() %>% 
  mutate(ola_num=as.numeric(ola),
         ola=as.factor(ola)
         )
# Hipotesis
h1 <- "ola"
h2 <- "ola+edad"
h3 <- "ola*edad"

marchar.null <- glmer(formula(paste0("mov_estudiantil~","1 + (1|idencuesta)")),data = df_study1, weights = ponderador_long_total, family = 'binomial')
marchar1 <- glmer(formula(paste0("mov_estudiantil~",h1,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total, family = 'binomial')
marchar2 <- glmer(formula(paste0("mov_estudiantil~",h2,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total, family = 'binomial')
marchar3 <- glmer(formula(paste0("mov_estudiantil~",h3,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total, family = 'binomial')

performance::icc(marchar.null)
```

```{r results='asis'}
texreg::htmlreg(list(marchar.null, marchar1, marchar2, marchar3),
                custom.note = "*** p < 0.001; ** p < 0.01; * p < 0.05")
```

### interacciones

```{r}
interact_plot(marchar3, pred = ola, modx = edad, interval = TRUE)
```

# Apoyo mov feminista (desde 2018 en adelante)

```{r}
load(file = here::here("input/data-proc/df_study1_long_t7.RData"))

df_study1 <- df_study1_long_t7 %>% dplyr::select(idencuesta,ola, segmento, estrato, ponderador_long_total,
                                                 mov_feminista,
                                                 edad) %>% na.omit()
df_study1 <- df_study1[complete.cases(df_study1$segmento), ]

df_study1$mov_feminista <- factor(df_study1$mov_feminista,
         labels = c("No", "Si"))

df_study1 <- df_study1 %>%
  dplyr::filter(!ola %in% c("1", "2"))

elsoc_diseno <- svydesign(ids = ~segmento, #muestreo por conglomerado a nivel de manzanas (segmento)
                          strata = ~estrato, #muestreo estratificado a nivel ciudad (estato)
                          weights = ~ponderador_long_total, #ponderador longitudinal
                          nest = TRUE,
                          data = df_study1)


#Paso 1
datos.marchar <- data.frame((svytable(~mov_feminista + ola + idencuesta, elsoc_diseno, round = F))) %>% 
  dplyr::filter(Freq>0)  %>% group_by(ola) %>% 
  mutate(porcentaje=Freq/sum(Freq)) %>% na.omit()

#Paso 2
etiquetas.marchar <- data.frame((svytable(~mov_feminista + ola, elsoc_diseno, round = F))) %>% 
  group_by(ola) %>% mutate(porcentaje=Freq/sum(Freq)) %>% na.omit() %>% 
  mutate(idencuesta = 1)

datos.marchar$mov_feminista <- factor(datos.marchar$mov_feminista, levels = rev(levels(datos.marchar$mov_feminista)))
etiquetas.marchar$mov_feminista <- factor(etiquetas.marchar$mov_feminista, levels = rev(levels(etiquetas.marchar$mov_feminista)))

ggplot(datos.marchar, aes(x = ola, fill = mov_feminista, stratum = mov_feminista,
                             alluvium = idencuesta, y = porcentaje))+
    ggalluvial::geom_flow(alpha = .66) + 
    ggalluvial::geom_stratum(linetype = 0) +
    scale_y_continuous(labels = scales::percent) + 
    ylab(label = NULL) +
    xlab(label = NULL) + 
    theme(#legend.position = 'top',
          legend.title = element_blank(),
          plot.caption = element_text(hjust = 1)) +
    scale_fill_manual(values = colors) +
    geom_shadowtext(data = etiquetas.marchar, 
              aes(label = ifelse(porcentaje > 0 , scales::percent(porcentaje, accuracy = .1),"")),
              position = position_stack(vjust = .5),
              show.legend = FALSE,
              size = 4,
              color = rep('white'),
              bg.colour='grey30')+
  scale_x_discrete(labels = c(2018, 2019, 2021, 2022, 2023))
```

## Regresión

```{r}
#if (!require("pacman")) install.packages("pacman") # instalar pacman
                            # cargar librerias
pacman::p_load(dplyr,       # Manipulacion de datos
               knitr,
               kableExtra,
               summarytools,
               lme4,
               texreg
               )
load(file = here::here("input/data-proc/df_study1_long_t7.RData"))

# generate analytical sample
df_study1 <- 
  df_study1_long_t7 %>%
  select(idencuesta,ola,mov_feminista, edad, ponderador_long_total) %>% 
  na.omit() %>% 
  mutate(ola_num=as.numeric(ola),
         ola=as.factor(ola)
         )

df_study1$mov_feminista <- factor(df_study1$mov_feminista,
         labels = c("No", "Si"))

df_study1 <- df_study1 %>%
  dplyr::filter(!ola %in% c("1", "2"))
# Hipotesis
h1 <- "ola"
h2 <- "ola+edad"
h3 <- "ola*edad"

marchar.null <- glmer(formula(paste0("mov_feminista~","1 + (1|idencuesta)")),data = df_study1, weights = ponderador_long_total, family = 'binomial')
marchar1 <- glmer(formula(paste0("mov_feminista~",h1,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total, family = 'binomial')
marchar2 <- glmer(formula(paste0("mov_feminista~",h2,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total, family = 'binomial')
marchar3 <- glmer(formula(paste0("mov_feminista~",h3,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total, family = 'binomial')

performance::icc(marchar.null)
```

```{r results='asis'}
texreg::htmlreg(list(marchar.null, marchar1, marchar2, marchar3),
                custom.note = "*** p < 0.001; ** p < 0.01; * p < 0.05")
```

### interacciones

```{r}
interact_plot(marchar3, pred = ola, modx = edad, interval = TRUE)
```


# Participación electoral

Variables:
- Participación elecciones 2013 (ola 1 y 2)
- Participación elecciones 2017 (ola 3 y 4)
- Participación en plebiscito nueva constitución (ola 5)
- Participación elecciones 2021 primera vuelta (ola 6)
- Participación elecciones 2021 segunda vuelta (ola 7)

```{r}
load(file = here::here("input/data-proc/df_study1_long_t7.RData"))
df_study1 <- df_study1_long_t7 %>% dplyr::select(idencuesta,ola, segmento, estrato, ponderador_long_total,
                                                 part_electoral,
                                                 edad) %>% na.omit()
sjmisc::frq(df_study1$part_electoral)

df_study1 <- df_study1[complete.cases(df_study1$segmento), ]

df_study1$part_electoral <- factor(df_study1$part_electoral, levels = c(1,2),
         labels = c("Si", "No"))
df_study1$part_electoral <- car::recode(df_study1$part_electoral, c("1=2; 2=1"))
sjmisc::frq(df_study1$part_electoral)

elsoc_diseno <- svydesign(ids = ~segmento, #muestreo por conglomerado a nivel de manzanas (segmento)
                          strata = ~estrato, #muestreo estratificado a nivel ciudad (estato)
                          weights = ~ponderador_long_total, #ponderador longitudinal
                          nest = TRUE,
                          data = df_study1)


#Paso 1
datos.marchar <- data.frame((svytable(~part_electoral + ola + idencuesta, elsoc_diseno, round = F))) %>% 
  dplyr::filter(Freq>0)  %>% group_by(ola) %>% 
  mutate(porcentaje=Freq/sum(Freq)) %>% na.omit()

#Paso 2
etiquetas.marchar <- data.frame((svytable(~part_electoral + ola, elsoc_diseno, round = F))) %>% 
  group_by(ola) %>% mutate(porcentaje=Freq/sum(Freq)) %>% na.omit() %>% 
  mutate(idencuesta = 1)

datos.marchar$part_electoral <- factor(datos.marchar$part_electoral, levels = rev(levels(datos.marchar$part_electoral)))
etiquetas.marchar$part_electoral <- factor(etiquetas.marchar$part_electoral, levels = rev(levels(etiquetas.marchar$part_electoral)))

ggplot(datos.marchar, aes(x = ola, fill = part_electoral, stratum = part_electoral,
                             alluvium = idencuesta, y = porcentaje))+
    ggalluvial::geom_flow(alpha = .66) + 
    ggalluvial::geom_stratum(linetype = 0) +
    scale_y_continuous(labels = scales::percent) + 
    ylab(label = NULL) +
    xlab(label = NULL) + 
    theme(#legend.position = 'top',
          legend.title = element_blank(),
          plot.caption = element_text(hjust = 1)) +
    scale_fill_manual(values = colors) +
    geom_shadowtext(data = etiquetas.marchar, 
              aes(label = ifelse(porcentaje > 0 , scales::percent(porcentaje, accuracy = .1),"")),
              position = position_stack(vjust = .5),
              show.legend = FALSE,
              size = 4,
              color = rep('white'),
              bg.colour='grey30')+
  scale_x_discrete(labels = c("Presidenciales
2013", "Presidenciales
2013", "Presidenciales
2017", "Presidenciales
2017", "Plebiscito
constitucional", "Primera vuelta
presidencial 2021", "Segunda vuelta
presidencial 2021"))
```

## Regresión

```{r}
#if (!require("pacman")) install.packages("pacman") # instalar pacman
                            # cargar librerias
pacman::p_load(dplyr,       # Manipulacion de datos
               knitr,
               kableExtra,
               summarytools,
               lme4,
               texreg
               )
load(file = here::here("input/data-proc/df_study1_long_t7.RData"))

# generate analytical sample
df_study1 <- 
  df_study1_long_t7 %>%
  select(idencuesta,ola,part_electoral, edad, ponderador_long_total) %>% 
  na.omit() %>% 
  mutate(ola_num=as.numeric(ola),
         ola=as.factor(ola)
         )

df_study1$part_electoral <- factor(df_study1$part_electoral, levels = c(1,2),
         labels = c("Si", "No"))
df_study1$part_electoral <- car::recode(df_study1$part_electoral, c("1=2; 2=1"))
df_study1 <- df_study1 %>%
  dplyr::mutate(part_electoral = ifelse(part_electoral == "Si", 1, 0))
# Hipotesis
h1 <- "ola"
h2 <- "ola+edad"
h3 <- "ola*edad"

marchar.null <- glmer(formula(paste0("part_electoral~","1 + (1|idencuesta)")),data = df_study1, weights = ponderador_long_total, family = "binomial")
marchar1 <- glmer(formula(paste0("part_electoral~",h1,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total, family = "binomial")
marchar2 <- glmer(formula(paste0("part_electoral~",h2,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total, family = "binomial")
marchar3 <- glmer(formula(paste0("part_electoral~",h3,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total, family = "binomial")

performance::icc(marchar.null)
```

```{r results='asis'}
texreg::knitreg(list(marchar.null, marchar1, marchar2, marchar3),
                custom.note = "*** p < 0.001; ** p < 0.01; * p < 0.05")
```

### interacciones

```{r}
interact_plot(marchar3, pred = ola, modx = edad, interval = TRUE)
```

# Interés en  la política (todas las olas)

```{r}
load(file = here::here("input/data-proc/df_study1_long_t7.RData"))

df_study1 <- df_study1_long_t7 %>% dplyr::select(idencuesta,ola, segmento, estrato, ponderador_long_total,
                                                 interes_pol,
                                                 edad) %>% na.omit()
df_study1 <- df_study1[complete.cases(df_study1$segmento), ]

df_study1$interes_pol <- factor(df_study1$interes_pol,
         labels = c("Nada", "Poco", "Algo", "Bastante", "Mucho"))

elsoc_diseno <- svydesign(ids = ~segmento, #muestreo por conglomerado a nivel de manzanas (segmento)
                          strata = ~estrato, #muestreo estratificado a nivel ciudad (estato)
                          weights = ~ponderador_long_total, #ponderador longitudinal
                          nest = TRUE,
                          data = df_study1)


#Paso 1
datos.marchar <- data.frame((svytable(~interes_pol + ola + idencuesta, elsoc_diseno, round = F))) %>% 
  dplyr::filter(Freq>0)  %>% group_by(ola) %>% 
  mutate(porcentaje=Freq/sum(Freq)) %>% na.omit()

#Paso 2
etiquetas.marchar <- data.frame((svytable(~interes_pol + ola, elsoc_diseno, round = F))) %>% 
  group_by(ola) %>% mutate(porcentaje=Freq/sum(Freq)) %>% na.omit() %>% 
  mutate(idencuesta = 1)

datos.marchar$interes_pol <- factor(datos.marchar$interes_pol, levels = rev(levels(datos.marchar$interes_pol)))
etiquetas.marchar$interes_pol <- factor(etiquetas.marchar$interes_pol, levels = rev(levels(etiquetas.marchar$interes_pol)))

ggplot(datos.marchar, aes(x = ola, fill = interes_pol, stratum = interes_pol,
                             alluvium = idencuesta, y = porcentaje))+
    ggalluvial::geom_flow(alpha = .66) + 
    ggalluvial::geom_stratum(linetype = 0) +
    scale_y_continuous(labels = scales::percent) + 
    ylab(label = NULL) +
    xlab(label = NULL) + 
    theme(#legend.position = 'top',
          legend.title = element_blank(),
          plot.caption = element_text(hjust = 1)) +
    scale_fill_manual(values = colors) +
    geom_shadowtext(data = etiquetas.marchar, 
              aes(label = ifelse(porcentaje > 0 , scales::percent(porcentaje, accuracy = .1),"")),
              position = position_stack(vjust = .5),
              show.legend = FALSE,
              size = 4,
              color = rep('white'),
              bg.colour='grey30')+
  scale_x_discrete(labels = c(2016, 2017, 2018, 2019, 2021, 2022, 2023))
```

## Regresión

```{r}
#if (!require("pacman")) install.packages("pacman") # instalar pacman
                            # cargar librerias
pacman::p_load(dplyr,       # Manipulacion de datos
               knitr,
               kableExtra,
               summarytools,
               lme4,
               texreg
               )
load(file = here::here("input/data-proc/df_study1_long_t7.RData"))

# generate analytical sample
df_study1 <- 
  df_study1_long_t7 %>%
  select(idencuesta,ola,interes_pol, edad, ponderador_long_total) %>% 
  na.omit() %>% 
  mutate(ola_num=as.numeric(ola),
         ola=as.factor(ola)
         )
# Hipotesis
h1 <- "ola"
h2 <- "ola+edad"
h3 <- "ola*edad"

marchar.null <- lmer(formula(paste0("interes_pol~","1 + (1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
marchar1 <- lmer(formula(paste0("interes_pol~",h1,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
marchar2 <- lmer(formula(paste0("interes_pol~",h2,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
marchar3 <- lmer(formula(paste0("interes_pol~",h3,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)

performance::icc(marchar.null)
```

```{r results='asis'}
texreg::htmlreg(list(marchar.null, marchar1, marchar2, marchar3),
                custom.note = "*** p < 0.001; ** p < 0.01; * p < 0.05")
```

### interacciones

```{r}
interact_plot(marchar3, pred = ola, modx = edad, interval = TRUE)
```

# Autoritarismo (casi todas las olas)

```{r}
load(file = here::here("input/data-proc/df_study1_long_t7.RData"))

df_study1 <- df_study1_long_t7 %>% dplyr::select(idencuesta,ola, segmento, estrato, ponderador_long_total,
                                                 autoritarismo1, autoritarismo2, autoritarismo3, autoritarismo4, autoritarismo5,
                                                 edad) %>% na.omit()

sjmisc::frq(df_study1$autoritarismo1)
sjmisc::frq(df_study1$autoritarismo2)
sjmisc::frq(df_study1$autoritarismo3)
sjmisc::frq(df_study1$autoritarismo4)
sjmisc::frq(df_study1$autoritarismo5)

M <-df_study1 %>% filter(ola==1) %>% select(autoritarismo1:autoritarismo5) %>% cor(use = "complete.obs") # Usar solo casos con observaciones completas
diag(M) = NA # Elimina la diagonal (correlaciones absolutas de cada variable consigmo misma)
# Set Row names of the matrix
rownames(M) <- c("A. Más que derechos necesitamos un gobierno firme",
                     "B. El país necesita un mandatario fuerte",
                     "C. Obediencia y respeto importantes que aprendan los niños",
                     "D. Obediencia y disciplina son claves para buena vida",
                     "E. El cambio social es posible")
#set Column names of the matrix
colnames(M) <-c("(A)", "(B)","(C)","(D)","(E)")

#Plot the matrix using corrplot
corrplot::corrplot(M,
  method = "color", # Cambia los círculos por color completo de cada cuadrante
  addCoef.col = "#000390", # Color de los coeficientes
  type = "upper", # Deja solo las correlaciones de arriba
  tl.col = "black", # COlor letras, rojo por defecto
  na.label = "-")

df_study1 <- df_study1 %>% 
  rowwise() %>%
  mutate(autoritarismo = mean(c(autoritarismo1:autoritarismo4, na.rm=TRUE))) %>% 
  ungroup()
```


```{r}
df_study1 <- df_study1[complete.cases(df_study1$segmento), ]

elsoc_diseno <- svydesign(ids = ~segmento, #muestreo por conglomerado a nivel de manzanas (segmento)
                          strata = ~estrato, #muestreo estratificado a nivel ciudad (estato)
                          weights = ~ponderador_long_total, #ponderador longitudinal
                          nest = TRUE,
                          data = df_study1)


#Paso 1
datos.marchar <- data.frame((svytable(~autoritarismo + ola + idencuesta, elsoc_diseno, round = F))) %>% 
  dplyr::filter(Freq>0)  %>% group_by(ola) %>% 
  mutate(porcentaje=Freq/sum(Freq)) %>% na.omit()

#Paso 2
etiquetas.marchar <- data.frame((svytable(~autoritarismo + ola, elsoc_diseno, round = F))) %>% 
  group_by(ola) %>% mutate(porcentaje=Freq/sum(Freq)) %>% na.omit() %>% 
  mutate(idencuesta = 1)

datos.marchar$autoritarismo <- factor(datos.marchar$autoritarismo, levels = rev(levels(datos.marchar$autoritarismo)))
etiquetas.marchar$autoritarismo <- factor(etiquetas.marchar$autoritarismo, levels = rev(levels(etiquetas.marchar$autoritarismo)))

ggplot(datos.marchar, aes(x = ola, fill = autoritarismo, stratum = autoritarismo,
                             alluvium = idencuesta, y = porcentaje))+
    ggalluvial::geom_flow(alpha = .66) + 
    ggalluvial::geom_stratum(linetype = 0) +
    scale_y_continuous(labels = scales::percent) + 
    ylab(label = NULL) +
    xlab(label = NULL) + 
    theme(#legend.position = 'top',
          legend.title = element_blank(),
          plot.caption = element_text(hjust = 1)) +
  #  scale_fill_manual(values = colors) +
    geom_shadowtext(data = etiquetas.marchar, 
              aes(label = ifelse(porcentaje > 0 , scales::percent(porcentaje, accuracy = .1),"")),
              position = position_stack(vjust = .5),
              show.legend = FALSE,
              size = 4,
              color = rep('white'),
              bg.colour='grey30')+
  scale_x_discrete(labels = c(2016, 2017, 2018, 2019, 2021, 2022, 2023))
```

### Regresión

```{r}

# Hipotesis
h1 <- "ola"
h2 <- "ola+edad"
h3 <- "ola*edad"

marchar.null <- lmer(formula(paste0("autoritarismo~","1 + (1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
marchar1 <- lmer(formula(paste0("autoritarismo~",h1,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
marchar2 <- lmer(formula(paste0("autoritarismo~",h2,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
marchar3 <- lmer(formula(paste0("autoritarismo~",h3,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)

performance::icc(marchar.null)
```

```{r results='asis'}
texreg::htmlreg(list(marchar.null, marchar1, marchar2, marchar3),
                custom.note = "*** p < 0.001; ** p < 0.01; * p < 0.05")
```

### interacciones

```{r}
interact_plot(marchar3, pred = ola, modx = edad, interval = TRUE)
```

## Cambio social es posible

```{r}
df_study1 <- df_study1[complete.cases(df_study1$segmento), ]

df_study1$autoritarismo5 <- factor(df_study1$autoritarismo5,
         labels = c("Totalmente
en desacuerdo", "Desacuerdo", "Ni de acuerdo
Ni desacuerdo", "De acuerdo", "Totalmente
de acuerdo"))

elsoc_diseno <- svydesign(ids = ~segmento, #muestreo por conglomerado a nivel de manzanas (segmento)
                          strata = ~estrato, #muestreo estratificado a nivel ciudad (estato)
                          weights = ~ponderador_long_total, #ponderador longitudinal
                          nest = TRUE,
                          data = df_study1)


#Paso 1
datos.marchar <- data.frame((svytable(~autoritarismo5 + ola + idencuesta, elsoc_diseno, round = F))) %>% 
  dplyr::filter(Freq>0)  %>% group_by(ola) %>% 
  mutate(porcentaje=Freq/sum(Freq)) %>% na.omit()

#Paso 2
etiquetas.marchar <- data.frame((svytable(~autoritarismo5 + ola, elsoc_diseno, round = F))) %>% 
  group_by(ola) %>% mutate(porcentaje=Freq/sum(Freq)) %>% na.omit() %>% 
  mutate(idencuesta = 1)

datos.marchar$autoritarismo5 <- factor(datos.marchar$autoritarismo5, levels = rev(levels(datos.marchar$autoritarismo5)))
etiquetas.marchar$autoritarismo5 <- factor(etiquetas.marchar$autoritarismo5, levels = rev(levels(etiquetas.marchar$autoritarismo5)))

ggplot(datos.marchar, aes(x = ola, fill = autoritarismo5, stratum = autoritarismo5,
                             alluvium = idencuesta, y = porcentaje))+
    ggalluvial::geom_flow(alpha = .66) + 
    ggalluvial::geom_stratum(linetype = 0) +
    scale_y_continuous(labels = scales::percent) + 
    ylab(label = NULL) +
    xlab(label = NULL) + 
    theme(#legend.position = 'top',
          legend.title = element_blank(),
          plot.caption = element_text(hjust = 1)) +
    scale_fill_manual(values = colors) +
    geom_shadowtext(data = etiquetas.marchar, 
              aes(label = ifelse(porcentaje > 0 , scales::percent(porcentaje, accuracy = .1),"")),
              position = position_stack(vjust = .5),
              show.legend = FALSE,
              size = 4,
              color = rep('white'),
              bg.colour='grey30')+
  scale_x_discrete(labels = c(2016, 2017, 2018, 2019, 2021, 2022, 2023))
```

### Regresión

```{r}
#if (!require("pacman")) install.packages("pacman") # instalar pacman
                            # cargar librerias
pacman::p_load(dplyr,       # Manipulacion de datos
               knitr,
               kableExtra,
               summarytools,
               lme4,
               texreg
               )
load(file = here::here("input/data-proc/df_study1_long_t7.RData"))

# generate analytical sample
df_study1 <- 
  df_study1_long_t7 %>%
  select(idencuesta,ola,autoritarismo5, edad, ponderador_long_total) %>% 
  na.omit() %>% 
  mutate(ola_num=as.numeric(ola),
         ola=as.factor(ola)
         )
# Hipotesis
h1 <- "ola"
h2 <- "ola+edad"
h3 <- "ola*edad"

marchar.null <- lmer(formula(paste0("autoritarismo5~","1 + (1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
marchar1 <- lmer(formula(paste0("autoritarismo5~",h1,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
marchar2 <- lmer(formula(paste0("autoritarismo5~",h2,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
marchar3 <- lmer(formula(paste0("autoritarismo5~",h3,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)

performance::icc(marchar.null)
```

```{r results='asis'}
texreg::htmlreg(list(marchar.null, marchar1, marchar2, marchar3),
                custom.note = "*** p < 0.001; ** p < 0.01; * p < 0.05")
```

### interacciones

```{r}
interact_plot(marchar3, pred = ola, modx = edad, interval = TRUE)
```

# Adopción homoparental (olas 3 en adelante)

```{r}
load(file = here::here("input/data-proc/df_study1_long_t7.RData"))

df_study1 <- df_study1_long_t7 %>% dplyr::select(idencuesta,ola, segmento, estrato, ponderador_long_total,
                                                 adop_homo,
                                                 edad) %>% na.omit()

df_study1 <- df_study1[complete.cases(df_study1$segmento), ]

df_study1$adop_homo <- factor(df_study1$adop_homo,
         labels = c("Totalmente
en desacuerdo", "Desacuerdo", "Ni de acuerdo
Ni desacuerdo", "De acuerdo", "Totalmente
de acuerdo"))

elsoc_diseno <- svydesign(ids = ~segmento, #muestreo por conglomerado a nivel de manzanas (segmento)
                          strata = ~estrato, #muestreo estratificado a nivel ciudad (estato)
                          weights = ~ponderador_long_total, #ponderador longitudinal
                          nest = TRUE,
                          data = df_study1)

#Paso 1
datos.marchar <- data.frame((svytable(~adop_homo + ola + idencuesta, elsoc_diseno, round = F))) %>% 
  dplyr::filter(Freq>0)  %>% group_by(ola) %>% 
  mutate(porcentaje=Freq/sum(Freq)) %>% na.omit()

#Paso 2
etiquetas.marchar <- data.frame((svytable(~adop_homo + ola, elsoc_diseno, round = F))) %>% 
  group_by(ola) %>% mutate(porcentaje=Freq/sum(Freq)) %>% na.omit() %>% 
  mutate(idencuesta = 1)

datos.marchar$adop_homo <- factor(datos.marchar$adop_homo, levels = rev(levels(datos.marchar$adop_homo)))
etiquetas.marchar$adop_homo <- factor(etiquetas.marchar$adop_homo, levels = rev(levels(etiquetas.marchar$adop_homo)))

ggplot(datos.marchar, aes(x = ola, fill = adop_homo, stratum = adop_homo,
                             alluvium = idencuesta, y = porcentaje))+
    ggalluvial::geom_flow(alpha = .66) + 
    ggalluvial::geom_stratum(linetype = 0) +
    scale_y_continuous(labels = scales::percent) + 
    ylab(label = NULL) +
    xlab(label = NULL) + 
    theme(#legend.position = 'top',
          legend.title = element_blank(),
          plot.caption = element_text(hjust = 1)) +
    scale_fill_manual(values = colors) +
    geom_shadowtext(data = etiquetas.marchar, 
              aes(label = ifelse(porcentaje > 0 , scales::percent(porcentaje, accuracy = .1),"")),
              position = position_stack(vjust = .5),
              show.legend = FALSE,
              size = 4,
              color = rep('white'),
              bg.colour='grey30')+
  scale_x_discrete(labels = c(2018, 2019, 2021, 2022, 2023))
```

## Regresión

```{r}
#if (!require("pacman")) install.packages("pacman") # instalar pacman
                            # cargar librerias
pacman::p_load(dplyr,       # Manipulacion de datos
               knitr,
               kableExtra,
               summarytools,
               lme4,
               texreg
               )
load(file = here::here("input/data-proc/df_study1_long_t7.RData"))

# generate analytical sample
df_study1 <- 
  df_study1_long_t7 %>%
  select(idencuesta,ola,adop_homo, edad, ponderador_long_total) %>% 
  na.omit() %>% 
  mutate(ola_num=as.numeric(ola),
         ola=as.factor(ola)
         )
# Hipotesis
h1 <- "ola"
h2 <- "ola+edad"
h3 <- "ola*edad"

marchar.null <- lmer(formula(paste0("adop_homo~","1 + (1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
marchar1 <- lmer(formula(paste0("adop_homo~",h1,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
marchar2 <- lmer(formula(paste0("adop_homo~",h2,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
marchar3 <- lmer(formula(paste0("adop_homo~",h3,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)

performance::icc(marchar.null)
```

```{r results='asis'}
texreg::htmlreg(list(marchar.null, marchar1, marchar2, marchar3),
                custom.note = "*** p < 0.001; ** p < 0.01; * p < 0.05")
```

### interacciones

```{r}
interact_plot(marchar3, pred = ola, modx = edad, interval = TRUE)
```

# Aborto (ola 3 en adelante)

```{r}
load(file = here::here("input/data-proc/df_study1_long_t7.RData"))

df_study1 <- df_study1_long_t7 %>% dplyr::select(idencuesta,ola, segmento, estrato, ponderador_long_total,
                                                 aborto,
                                                 edad) %>% na.omit()

df_study1 <- df_study1[complete.cases(df_study1$segmento), ]

df_study1$aborto <- factor(df_study1$aborto,
         labels = c("Totalmente
en desacuerdo", "Desacuerdo", "Ni de acuerdo
Ni desacuerdo", "De acuerdo", "Totalmente
de acuerdo"))

elsoc_diseno <- svydesign(ids = ~segmento, #muestreo por conglomerado a nivel de manzanas (segmento)
                          strata = ~estrato, #muestreo estratificado a nivel ciudad (estato)
                          weights = ~ponderador_long_total, #ponderador longitudinal
                          nest = TRUE,
                          data = df_study1)

#Paso 1
datos.marchar <- data.frame((svytable(~aborto + ola + idencuesta, elsoc_diseno, round = F))) %>% 
  dplyr::filter(Freq>0)  %>% group_by(ola) %>% 
  mutate(porcentaje=Freq/sum(Freq)) %>% na.omit()

#Paso 2
etiquetas.marchar <- data.frame((svytable(~aborto + ola, elsoc_diseno, round = F))) %>% 
  group_by(ola) %>% mutate(porcentaje=Freq/sum(Freq)) %>% na.omit() %>% 
  mutate(idencuesta = 1)

datos.marchar$aborto <- factor(datos.marchar$aborto, levels = rev(levels(datos.marchar$aborto)))
etiquetas.marchar$aborto <- factor(etiquetas.marchar$aborto, levels = rev(levels(etiquetas.marchar$aborto)))

ggplot(datos.marchar, aes(x = ola, fill = aborto, stratum = aborto,
                             alluvium = idencuesta, y = porcentaje))+
    ggalluvial::geom_flow(alpha = .66) + 
    ggalluvial::geom_stratum(linetype = 0) +
    scale_y_continuous(labels = scales::percent) + 
    ylab(label = NULL) +
    xlab(label = NULL) + 
    theme(#legend.position = 'top',
          legend.title = element_blank(),
          plot.caption = element_text(hjust = 1)) +
    scale_fill_manual(values = colors) +
    geom_shadowtext(data = etiquetas.marchar, 
              aes(label = ifelse(porcentaje > 0 , scales::percent(porcentaje, accuracy = .1),"")),
              position = position_stack(vjust = .5),
              show.legend = FALSE,
              size = 4,
              color = rep('white'),
              bg.colour='grey30')+
  scale_x_discrete(labels = c(2018, 2019, 2021, 2022, 2023))
```

## Regresión

```{r}
#if (!require("pacman")) install.packages("pacman") # instalar pacman
                            # cargar librerias
pacman::p_load(dplyr,       # Manipulacion de datos
               knitr,
               kableExtra,
               summarytools,
               lme4,
               texreg
               )
load(file = here::here("input/data-proc/df_study1_long_t7.RData"))

# generate analytical sample
df_study1 <- 
  df_study1_long_t7 %>%
  select(idencuesta,ola,aborto, edad, ponderador_long_total) %>% 
  na.omit() %>% 
  mutate(ola_num=as.numeric(ola),
         ola=as.factor(ola)
         )
# Hipotesis
h1 <- "ola"
h2 <- "ola+edad"
h3 <- "ola*edad"

marchar.null <- lmer(formula(paste0("aborto~","1 + (1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
marchar1 <- lmer(formula(paste0("aborto~",h1,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
marchar2 <- lmer(formula(paste0("aborto~",h2,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
marchar3 <- lmer(formula(paste0("aborto~",h3,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)

performance::icc(marchar.null)
```

```{r results='asis'}
texreg::htmlreg(list(marchar.null, marchar1, marchar2, marchar3),
                custom.note = "*** p < 0.001; ** p < 0.01; * p < 0.05")
```

### interacciones

```{r}
interact_plot(marchar3, pred = ola, modx = edad, interval = TRUE)
```

# Cada persona debiera asegurarse por Si mismo su futura pensión para la tercera edad (ola 3 en adelante)

```{r}
load(file = here::here("input/data-proc/df_study1_long_t7.RData"))

df_study1 <- df_study1_long_t7 %>% dplyr::select(idencuesta,ola, segmento, estrato, ponderador_long_total,
                                                 pensiones,
                                                 edad) %>% na.omit()

df_study1 <- df_study1[complete.cases(df_study1$segmento), ]

df_study1$pensiones <- factor(df_study1$pensiones,
         labels = c("Totalmente
en desacuerdo", "Desacuerdo", "Ni de acuerdo
Ni desacuerdo", "De acuerdo", "Totalmente
de acuerdo"))

elsoc_diseno <- svydesign(ids = ~segmento, #muestreo por conglomerado a nivel de manzanas (segmento)
                          strata = ~estrato, #muestreo estratificado a nivel ciudad (estato)
                          weights = ~ponderador_long_total, #ponderador longitudinal
                          nest = TRUE,
                          data = df_study1)

#Paso 1
datos.marchar <- data.frame((svytable(~pensiones + ola + idencuesta, elsoc_diseno, round = F))) %>% 
  dplyr::filter(Freq>0)  %>% group_by(ola) %>% 
  mutate(porcentaje=Freq/sum(Freq)) %>% na.omit()

#Paso 2
etiquetas.marchar <- data.frame((svytable(~pensiones + ola, elsoc_diseno, round = F))) %>% 
  group_by(ola) %>% mutate(porcentaje=Freq/sum(Freq)) %>% na.omit() %>% 
  mutate(idencuesta = 1)

datos.marchar$pensiones <- factor(datos.marchar$pensiones, levels = rev(levels(datos.marchar$pensiones)))
etiquetas.marchar$pensiones <- factor(etiquetas.marchar$pensiones, levels = rev(levels(etiquetas.marchar$pensiones)))

ggplot(datos.marchar, aes(x = ola, fill = pensiones, stratum = pensiones,
                             alluvium = idencuesta, y = porcentaje))+
    ggalluvial::geom_flow(alpha = .66) + 
    ggalluvial::geom_stratum(linetype = 0) +
    scale_y_continuous(labels = scales::percent) + 
    ylab(label = NULL) +
    xlab(label = NULL) + 
    theme(#legend.position = 'top',
          legend.title = element_blank(),
          plot.caption = element_text(hjust = 1)) +
    scale_fill_manual(values = colors) +
    geom_shadowtext(data = etiquetas.marchar, 
              aes(label = ifelse(porcentaje > 0 , scales::percent(porcentaje, accuracy = .1),"")),
              position = position_stack(vjust = .5),
              show.legend = FALSE,
              size = 4,
              color = rep('white'),
              bg.colour='grey30')+
  scale_x_discrete(labels = c(2018, 2019, 2021, 2022, 2023))
```

## Regresión

```{r}
#if (!require("pacman")) install.packages("pacman") # instalar pacman
                            # cargar librerias
pacman::p_load(dplyr,       # Manipulacion de datos
               knitr,
               kableExtra,
               summarytools,
               lme4,
               texreg
               )
load(file = here::here("input/data-proc/df_study1_long_t7.RData"))

# generate analytical sample
df_study1 <- 
  df_study1_long_t7 %>%
  select(idencuesta,ola,pensiones, edad, ponderador_long_total) %>% 
  na.omit() %>% 
  mutate(ola_num=as.numeric(ola),
         ola=as.factor(ola)
         )
# Hipotesis
h1 <- "ola"
h2 <- "ola+edad"
h3 <- "ola*edad"

marchar.null <- lmer(formula(paste0("pensiones~","1 + (1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
marchar1 <- lmer(formula(paste0("pensiones~",h1,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
marchar2 <- lmer(formula(paste0("pensiones~",h2,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
marchar3 <- lmer(formula(paste0("pensiones~",h3,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)

performance::icc(marchar.null)
```

```{r results='asis'}
texreg::htmlreg(list(marchar.null, marchar1, marchar2, marchar3),
                custom.note = "*** p < 0.001; ** p < 0.01; * p < 0.05")
```

### interacciones

```{r}
interact_plot(marchar3, pred = ola, modx = edad, interval = TRUE)
```

# Chile debería tomar medidas más drásticas para impedir el ingreso de inmigrantes al países

```{r}
load(file = here::here("input/data-proc/df_study1_long_t7.RData"))

df_study1 <- df_study1_long_t7 %>% dplyr::select(idencuesta,ola, segmento, estrato, ponderador_long_total,
                                                 restriccion_migrantes,
                                                 edad) %>% na.omit()

df_study1 <- df_study1[complete.cases(df_study1$segmento), ]

df_study1$restriccion_migrantes <- factor(df_study1$restriccion_migrantes,
         labels = c("Totalmente
en desacuerdo", "Desacuerdo", "Ni de acuerdo
Ni desacuerdo", "De acuerdo", "Totalmente
de acuerdo"))

elsoc_diseno <- svydesign(ids = ~segmento, #muestreo por conglomerado a nivel de manzanas (segmento)
                          strata = ~estrato, #muestreo estratificado a nivel ciudad (estato)
                          weights = ~ponderador_long_total, #ponderador longitudinal
                          nest = TRUE,
                          data = df_study1)

#Paso 1
datos.marchar <- data.frame((svytable(~restriccion_migrantes + ola + idencuesta, elsoc_diseno, round = F))) %>% 
  dplyr::filter(Freq>0)  %>% group_by(ola) %>% 
  mutate(porcentaje=Freq/sum(Freq)) %>% na.omit()

#Paso 2
etiquetas.marchar <- data.frame((svytable(~restriccion_migrantes + ola, elsoc_diseno, round = F))) %>% 
  group_by(ola) %>% mutate(porcentaje=Freq/sum(Freq)) %>% na.omit() %>% 
  mutate(idencuesta = 1)

datos.marchar$restriccion_migrantes <- factor(datos.marchar$restriccion_migrantes, levels = rev(levels(datos.marchar$restriccion_migrantes)))
etiquetas.marchar$restriccion_migrantes <- factor(etiquetas.marchar$restriccion_migrantes, levels = rev(levels(etiquetas.marchar$restriccion_migrantes)))

ggplot(datos.marchar, aes(x = ola, fill = restriccion_migrantes, stratum = restriccion_migrantes,
                             alluvium = idencuesta, y = porcentaje))+
    ggalluvial::geom_flow(alpha = .66) + 
    ggalluvial::geom_stratum(linetype = 0) +
    scale_y_continuous(labels = scales::percent) + 
    ylab(label = NULL) +
    xlab(label = NULL) + 
    theme(#legend.position = 'top',
          legend.title = element_blank(),
          plot.caption = element_text(hjust = 1)) +
    scale_fill_manual(values = colors) +
    geom_shadowtext(data = etiquetas.marchar, 
              aes(label = ifelse(porcentaje > 0 , scales::percent(porcentaje, accuracy = .1),"")),
              position = position_stack(vjust = .5),
              show.legend = FALSE,
              size = 4,
              color = rep('white'),
              bg.colour='grey30')+
  scale_x_discrete(labels = c(2018, 2019, 2021, 2022, 2023))
```

## Regresión

```{r}
#if (!require("pacman")) install.packages("pacman") # instalar pacman
                            # cargar librerias
pacman::p_load(dplyr,       # Manipulacion de datos
               knitr,
               kableExtra,
               summarytools,
               lme4,
               texreg
               )
load(file = here::here("input/data-proc/df_study1_long_t7.RData"))

# generate analytical sample
df_study1 <- 
  df_study1_long_t7 %>%
  select(idencuesta,ola,restriccion_migrantes, edad, ponderador_long_total) %>% 
  na.omit() %>% 
  mutate(ola_num=as.numeric(ola),
         ola=as.factor(ola)
         )
# Hipotesis
h1 <- "ola"
h2 <- "ola+edad"
h3 <- "ola*edad"

marchar.null <- lmer(formula(paste0("restriccion_migrantes~","1 + (1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
marchar1 <- lmer(formula(paste0("restriccion_migrantes~",h1,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
marchar2 <- lmer(formula(paste0("restriccion_migrantes~",h2,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
marchar3 <- lmer(formula(paste0("restriccion_migrantes~",h3,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)

performance::icc(marchar.null)
```

```{r results='asis'}
texreg::htmlreg(list(marchar.null, marchar1, marchar2, marchar3),
                custom.note = "*** p < 0.001; ** p < 0.01; * p < 0.05")
```

### interacciones

```{r}
interact_plot(marchar3, pred = ola, modx = edad, interval = TRUE)
```

# El Estado de Chile, más que los privados, debería ser el principal proveedor de educación

```{r}
load(file = here::here("input/data-proc/df_study1_long_t7.RData"))

df_study1 <- df_study1_long_t7 %>% dplyr::select(idencuesta,ola, segmento, estrato, ponderador_long_total,
                                                 rol_estado_educ,
                                                 edad) %>% na.omit()

df_study1 <- df_study1[complete.cases(df_study1$segmento), ]

df_study1$rol_estado_educ <- factor(df_study1$rol_estado_educ,
         labels = c("Totalmente
en desacuerdo", "Desacuerdo", "Ni de acuerdo
Ni desacuerdo", "De acuerdo", "Totalmente
de acuerdo"))

elsoc_diseno <- svydesign(ids = ~segmento, #muestreo por conglomerado a nivel de manzanas (segmento)
                          strata = ~estrato, #muestreo estratificado a nivel ciudad (estato)
                          weights = ~ponderador_long_total, #ponderador longitudinal
                          nest = TRUE,
                          data = df_study1)

#Paso 1
datos.marchar <- data.frame((svytable(~rol_estado_educ + ola + idencuesta, elsoc_diseno, round = F))) %>% 
  dplyr::filter(Freq>0)  %>% group_by(ola) %>% 
  mutate(porcentaje=Freq/sum(Freq)) %>% na.omit()

#Paso 2
etiquetas.marchar <- data.frame((svytable(~rol_estado_educ + ola, elsoc_diseno, round = F))) %>% 
  group_by(ola) %>% mutate(porcentaje=Freq/sum(Freq)) %>% na.omit() %>% 
  mutate(idencuesta = 1)

datos.marchar$rol_estado_educ <- factor(datos.marchar$rol_estado_educ, levels = rev(levels(datos.marchar$rol_estado_educ)))
etiquetas.marchar$rol_estado_educ <- factor(etiquetas.marchar$rol_estado_educ, levels = rev(levels(etiquetas.marchar$rol_estado_educ)))

ggplot(datos.marchar, aes(x = ola, fill = rol_estado_educ, stratum = rol_estado_educ,
                             alluvium = idencuesta, y = porcentaje))+
    ggalluvial::geom_flow(alpha = .66) + 
    ggalluvial::geom_stratum(linetype = 0) +
    scale_y_continuous(labels = scales::percent) + 
    ylab(label = NULL) +
    xlab(label = NULL) + 
    theme(#legend.position = 'top',
          legend.title = element_blank(),
          plot.caption = element_text(hjust = 1)) +
    scale_fill_manual(values = colors) +
    geom_shadowtext(data = etiquetas.marchar, 
              aes(label = ifelse(porcentaje > 0 , scales::percent(porcentaje, accuracy = .1),"")),
              position = position_stack(vjust = .5),
              show.legend = FALSE,
              size = 4,
              color = rep('white'),
              bg.colour='grey30')+
  scale_x_discrete(labels = c(2018, 2019, 2021, 2022, 2023))
```

## Regresión

```{r}
#if (!require("pacman")) install.packages("pacman") # instalar pacman
                            # cargar librerias
pacman::p_load(dplyr,       # Manipulacion de datos
               knitr,
               kableExtra,
               summarytools,
               lme4,
               texreg
               )
load(file = here::here("input/data-proc/df_study1_long_t7.RData"))

# generate analytical sample
df_study1 <- 
  df_study1_long_t7 %>%
  select(idencuesta,ola,rol_estado_educ, edad, ponderador_long_total) %>% 
  na.omit() %>% 
  mutate(ola_num=as.numeric(ola),
         ola=as.factor(ola)
         )
# Hipotesis
h1 <- "ola"
h2 <- "ola+edad"
h3 <- "ola*edad"

marchar.null <- lmer(formula(paste0("rol_estado_educ~","1 + (1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
marchar1 <- lmer(formula(paste0("rol_estado_educ~",h1,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
marchar2 <- lmer(formula(paste0("rol_estado_educ~",h2,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
marchar3 <- lmer(formula(paste0("rol_estado_educ~",h3,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)

performance::icc(marchar.null)
```

```{r results='asis'}
texreg::htmlreg(list(marchar.null, marchar1, marchar2, marchar3),
                custom.note = "*** p < 0.001; ** p < 0.01; * p < 0.05")
```

### interacciones

```{r}
interact_plot(marchar3, pred = ola, modx = edad, interval = TRUE)
```

# En Chile, las diferencias de ingreso son demasiado grandes

```{r}
load(file = here::here("input/data-proc/df_study1_long_t7.RData"))

df_study1 <- df_study1_long_t7 %>% dplyr::select(idencuesta,ola, segmento, estrato, ponderador_long_total,
                                                 perc_des,
                                                 edad) %>% na.omit()

df_study1 <- df_study1[complete.cases(df_study1$segmento), ]

df_study1$perc_des <- factor(df_study1$perc_des,
         labels = c("Totalmente
en desacuerdo", "Desacuerdo", "Ni de acuerdo
Ni desacuerdo", "De acuerdo", "Totalmente
de acuerdo"))

elsoc_diseno <- svydesign(ids = ~segmento, #muestreo por conglomerado a nivel de manzanas (segmento)
                          strata = ~estrato, #muestreo estratificado a nivel ciudad (estato)
                          weights = ~ponderador_long_total, #ponderador longitudinal
                          nest = TRUE,
                          data = df_study1)

#Paso 1
datos.marchar <- data.frame((svytable(~perc_des + ola + idencuesta, elsoc_diseno, round = F))) %>% 
  dplyr::filter(Freq>0)  %>% group_by(ola) %>% 
  mutate(porcentaje=Freq/sum(Freq)) %>% na.omit()

#Paso 2
etiquetas.marchar <- data.frame((svytable(~perc_des + ola, elsoc_diseno, round = F))) %>% 
  group_by(ola) %>% mutate(porcentaje=Freq/sum(Freq)) %>% na.omit() %>% 
  mutate(idencuesta = 1)

datos.marchar$perc_des <- factor(datos.marchar$perc_des, levels = rev(levels(datos.marchar$perc_des)))
etiquetas.marchar$perc_des <- factor(etiquetas.marchar$perc_des, levels = rev(levels(etiquetas.marchar$perc_des)))

ggplot(datos.marchar, aes(x = ola, fill = perc_des, stratum = perc_des,
                             alluvium = idencuesta, y = porcentaje))+
    ggalluvial::geom_flow(alpha = .66) + 
    ggalluvial::geom_stratum(linetype = 0) +
    scale_y_continuous(labels = scales::percent) + 
    ylab(label = NULL) +
    xlab(label = NULL) + 
    theme(#legend.position = 'top',
          legend.title = element_blank(),
          plot.caption = element_text(hjust = 1)) +
    scale_fill_manual(values = colors) +
    geom_shadowtext(data = etiquetas.marchar, 
              aes(label = ifelse(porcentaje > 0 , scales::percent(porcentaje, accuracy = .1),"")),
              position = position_stack(vjust = .5),
              show.legend = FALSE,
              size = 4,
              color = rep('white'),
              bg.colour='grey30')+
  scale_x_discrete(labels = c(2016, 2017, 2018, 2019, 2021, 2022, 2023))
```

## Regresión

```{r}
#if (!require("pacman")) install.packages("pacman") # instalar pacman
                            # cargar librerias
pacman::p_load(dplyr,       # Manipulacion de datos
               knitr,
               kableExtra,
               summarytools,
               lme4,
               texreg
               )
load(file = here::here("input/data-proc/df_study1_long_t7.RData"))

# generate analytical sample
df_study1 <- 
  df_study1_long_t7 %>%
  select(idencuesta,ola,perc_des, edad, ponderador_long_total) %>% 
  na.omit() %>% 
  mutate(ola_num=as.numeric(ola),
         ola=as.factor(ola)
         )
# Hipotesis
h1 <- "ola"
h2 <- "ola+edad"
h3 <- "ola*edad"

marchar.null <- lmer(formula(paste0("perc_des~","1 + (1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
marchar1 <- lmer(formula(paste0("perc_des~",h1,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
marchar2 <- lmer(formula(paste0("perc_des~",h2,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)
marchar3 <- lmer(formula(paste0("perc_des~",h3,"+(1|idencuesta)")),data = df_study1, weights = ponderador_long_total)

performance::icc(marchar.null)
```

```{r results='asis'}
texreg::htmlreg(list(marchar.null, marchar1, marchar2, marchar3),
                custom.note = "*** p < 0.001; ** p < 0.01; * p < 0.05")
```

### interacciones

```{r}
interact_plot(marchar3, pred = ola, modx = edad, interval = TRUE)
```
